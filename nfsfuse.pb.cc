// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nfsfuse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "nfsfuse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace nfsfuse {

namespace {

const ::google::protobuf::Descriptor* SerializeByte_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SerializeByte_reflection_ = NULL;
const ::google::protobuf::Descriptor* String_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  String_reflection_ = NULL;
const ::google::protobuf::Descriptor* Dirent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Dirent_reflection_ = NULL;
const ::google::protobuf::Descriptor* Stat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Stat_reflection_ = NULL;
const ::google::protobuf::Descriptor* FuseFileInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FuseFileInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReadResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReadRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* WriteRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WriteRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* WriteResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WriteResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* Mkdir_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Mkdir_reflection_ = NULL;
const ::google::protobuf::Descriptor* MkdirOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MkdirOutput_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_nfsfuse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_nfsfuse_2eproto() {
  protobuf_AddDesc_nfsfuse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "nfsfuse.proto");
  GOOGLE_CHECK(file != NULL);
  SerializeByte_descriptor_ = file->message_type(0);
  static const int SerializeByte_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SerializeByte, buffer_),
  };
  SerializeByte_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SerializeByte_descriptor_,
      SerializeByte::default_instance_,
      SerializeByte_offsets_,
      -1,
      -1,
      -1,
      sizeof(SerializeByte),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SerializeByte, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SerializeByte, _is_default_instance_));
  String_descriptor_ = file->message_type(1);
  static const int String_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(String, str_),
  };
  String_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      String_descriptor_,
      String::default_instance_,
      String_offsets_,
      -1,
      -1,
      -1,
      sizeof(String),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(String, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(String, _is_default_instance_));
  Dirent_descriptor_ = file->message_type(2);
  static const int Dirent_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dirent, dino_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dirent, dname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dirent, dtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dirent, err_),
  };
  Dirent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Dirent_descriptor_,
      Dirent::default_instance_,
      Dirent_offsets_,
      -1,
      -1,
      -1,
      sizeof(Dirent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dirent, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dirent, _is_default_instance_));
  Stat_descriptor_ = file->message_type(3);
  static const int Stat_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, dev_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, ino_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, nlink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, gid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, blksize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, blocks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, atime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, mtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, ctime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, err_),
  };
  Stat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Stat_descriptor_,
      Stat::default_instance_,
      Stat_offsets_,
      -1,
      -1,
      -1,
      sizeof(Stat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, _is_default_instance_));
  FuseFileInfo_descriptor_ = file->message_type(4);
  static const int FuseFileInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, flags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, fh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, oldfh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, lockowner_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, pollevent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, path_),
  };
  FuseFileInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FuseFileInfo_descriptor_,
      FuseFileInfo::default_instance_,
      FuseFileInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(FuseFileInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, _is_default_instance_));
  ReadResult_descriptor_ = file->message_type(5);
  static const int ReadResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResult, bytesread_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResult, buffer_),
  };
  ReadResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadResult_descriptor_,
      ReadResult::default_instance_,
      ReadResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReadResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResult, _is_default_instance_));
  ReadRequest_descriptor_ = file->message_type(6);
  static const int ReadRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, offset_),
  };
  ReadRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadRequest_descriptor_,
      ReadRequest::default_instance_,
      ReadRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReadRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, _is_default_instance_));
  WriteRequest_descriptor_ = file->message_type(7);
  static const int WriteRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, buffer_),
  };
  WriteRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WriteRequest_descriptor_,
      WriteRequest::default_instance_,
      WriteRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(WriteRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, _is_default_instance_));
  WriteResult_descriptor_ = file->message_type(8);
  static const int WriteResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteResult, nbytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteResult, err_),
  };
  WriteResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WriteResult_descriptor_,
      WriteResult::default_instance_,
      WriteResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(WriteResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteResult, _is_default_instance_));
  Mkdir_descriptor_ = file->message_type(9);
  static const int Mkdir_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mkdir, s_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mkdir, mode_),
  };
  Mkdir_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Mkdir_descriptor_,
      Mkdir::default_instance_,
      Mkdir_offsets_,
      -1,
      -1,
      -1,
      sizeof(Mkdir),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mkdir, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mkdir, _is_default_instance_));
  MkdirOutput_descriptor_ = file->message_type(10);
  static const int MkdirOutput_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirOutput, str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirOutput, err_),
  };
  MkdirOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MkdirOutput_descriptor_,
      MkdirOutput::default_instance_,
      MkdirOutput_offsets_,
      -1,
      -1,
      -1,
      sizeof(MkdirOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirOutput, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirOutput, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_nfsfuse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SerializeByte_descriptor_, &SerializeByte::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      String_descriptor_, &String::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Dirent_descriptor_, &Dirent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Stat_descriptor_, &Stat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FuseFileInfo_descriptor_, &FuseFileInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadResult_descriptor_, &ReadResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadRequest_descriptor_, &ReadRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WriteRequest_descriptor_, &WriteRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WriteResult_descriptor_, &WriteResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Mkdir_descriptor_, &Mkdir::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MkdirOutput_descriptor_, &MkdirOutput::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_nfsfuse_2eproto() {
  delete SerializeByte::default_instance_;
  delete SerializeByte_reflection_;
  delete String::default_instance_;
  delete String_reflection_;
  delete Dirent::default_instance_;
  delete Dirent_reflection_;
  delete Stat::default_instance_;
  delete Stat_reflection_;
  delete FuseFileInfo::default_instance_;
  delete FuseFileInfo_reflection_;
  delete ReadResult::default_instance_;
  delete ReadResult_reflection_;
  delete ReadRequest::default_instance_;
  delete ReadRequest_reflection_;
  delete WriteRequest::default_instance_;
  delete WriteRequest_reflection_;
  delete WriteResult::default_instance_;
  delete WriteResult_reflection_;
  delete Mkdir::default_instance_;
  delete Mkdir_reflection_;
  delete MkdirOutput::default_instance_;
  delete MkdirOutput_reflection_;
}

void protobuf_AddDesc_nfsfuse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_nfsfuse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rnfsfuse.proto\022\007nfsfuse\"\037\n\rSerializeByt"
    "e\022\016\n\006buffer\030\001 \001(\014\"\025\n\006String\022\013\n\003str\030\001 \001(\t"
    "\"A\n\006Dirent\022\014\n\004dino\030\001 \001(\r\022\r\n\005dname\030\002 \001(\t\022"
    "\r\n\005dtype\030\003 \001(\r\022\013\n\003err\030\004 \001(\r\"\300\001\n\004Stat\022\013\n\003"
    "dev\030\001 \001(\r\022\013\n\003ino\030\002 \001(\r\022\014\n\004mode\030\003 \001(\r\022\r\n\005"
    "nlink\030\004 \001(\r\022\013\n\003uid\030\005 \001(\r\022\013\n\003gid\030\006 \001(\r\022\014\n"
    "\004size\030\007 \001(\022\022\017\n\007blksize\030\010 \001(\022\022\016\n\006blocks\030\t"
    " \001(\022\022\r\n\005atime\030\n \001(\r\022\r\n\005mtime\030\013 \001(\r\022\r\n\005ct"
    "ime\030\014 \001(\r\022\013\n\003err\030\016 \001(\r\"y\n\014FuseFileInfo\022\r"
    "\n\005flags\030\001 \001(\005\022\n\n\002fh\030\002 \001(\005\022\r\n\005oldfh\030\003 \001(\r"
    "\022\021\n\tlockowner\030\005 \001(\004\022\021\n\tpollevent\030\006 \001(\r\022\013"
    "\n\003err\030\004 \001(\r\022\014\n\004path\030\007 \001(\t\"/\n\nReadResult\022"
    "\021\n\tbytesread\030\001 \001(\005\022\016\n\006buffer\030\002 \001(\014\"9\n\013Re"
    "adRequest\022\014\n\004path\030\001 \001(\t\022\014\n\004size\030\002 \001(\r\022\016\n"
    "\006offset\030\003 \001(\003\"J\n\014WriteRequest\022\014\n\004path\030\001 "
    "\001(\t\022\014\n\004size\030\002 \001(\r\022\016\n\006offset\030\003 \001(\005\022\016\n\006buf"
    "fer\030\004 \001(\014\"*\n\013WriteResult\022\016\n\006nbytes\030\001 \001(\005"
    "\022\013\n\003err\030\002 \001(\005\" \n\005Mkdir\022\t\n\001s\030\001 \001(\t\022\014\n\004mod"
    "e\030\002 \001(\r\"\'\n\013MkdirOutput\022\013\n\003str\030\001 \001(\t\022\013\n\003e"
    "rr\030\002 \001(\r2\243\003\n\003NFS\0223\n\017nfsfuse_getattr\022\017.nf"
    "sfuse.String\032\r.nfsfuse.Stat\"\000\0227\n\017nfsfuse"
    "_readdir\022\017.nfsfuse.String\032\017.nfsfuse.Dire"
    "nt\"\0000\001\022>\n\014nfsfuse_open\022\025.nfsfuse.FuseFil"
    "eInfo\032\025.nfsfuse.FuseFileInfo\"\000\022;\n\014nfsfus"
    "e_read\022\024.nfsfuse.ReadRequest\032\023.nfsfuse.R"
    "eadResult\"\000\022>\n\rnfsfuse_write\022\025.nfsfuse.W"
    "riteRequest\032\024.nfsfuse.WriteResult\"\000\0227\n\rn"
    "fsfuse_mkdir\022\016.nfsfuse.Mkdir\032\024.nfsfuse.M"
    "kdirOutput\"\000\0228\n\rnfsfuse_rmdir\022\017.nfsfuse."
    "String\032\024.nfsfuse.MkdirOutput\"\000b\006proto3", 1198);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "nfsfuse.proto", &protobuf_RegisterTypes);
  SerializeByte::default_instance_ = new SerializeByte();
  String::default_instance_ = new String();
  Dirent::default_instance_ = new Dirent();
  Stat::default_instance_ = new Stat();
  FuseFileInfo::default_instance_ = new FuseFileInfo();
  ReadResult::default_instance_ = new ReadResult();
  ReadRequest::default_instance_ = new ReadRequest();
  WriteRequest::default_instance_ = new WriteRequest();
  WriteResult::default_instance_ = new WriteResult();
  Mkdir::default_instance_ = new Mkdir();
  MkdirOutput::default_instance_ = new MkdirOutput();
  SerializeByte::default_instance_->InitAsDefaultInstance();
  String::default_instance_->InitAsDefaultInstance();
  Dirent::default_instance_->InitAsDefaultInstance();
  Stat::default_instance_->InitAsDefaultInstance();
  FuseFileInfo::default_instance_->InitAsDefaultInstance();
  ReadResult::default_instance_->InitAsDefaultInstance();
  ReadRequest::default_instance_->InitAsDefaultInstance();
  WriteRequest::default_instance_->InitAsDefaultInstance();
  WriteResult::default_instance_->InitAsDefaultInstance();
  Mkdir::default_instance_->InitAsDefaultInstance();
  MkdirOutput::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_nfsfuse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_nfsfuse_2eproto {
  StaticDescriptorInitializer_nfsfuse_2eproto() {
    protobuf_AddDesc_nfsfuse_2eproto();
  }
} static_descriptor_initializer_nfsfuse_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializeByte::kBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializeByte::SerializeByte()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.SerializeByte)
}

void SerializeByte::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SerializeByte::SerializeByte(const SerializeByte& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.SerializeByte)
}

void SerializeByte::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SerializeByte::~SerializeByte() {
  // @@protoc_insertion_point(destructor:nfsfuse.SerializeByte)
  SharedDtor();
}

void SerializeByte::SharedDtor() {
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SerializeByte::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SerializeByte::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SerializeByte_descriptor_;
}

const SerializeByte& SerializeByte::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

SerializeByte* SerializeByte::default_instance_ = NULL;

SerializeByte* SerializeByte::New(::google::protobuf::Arena* arena) const {
  SerializeByte* n = new SerializeByte;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SerializeByte::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.SerializeByte)
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SerializeByte::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.SerializeByte)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes buffer = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.SerializeByte)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.SerializeByte)
  return false;
#undef DO_
}

void SerializeByte::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.SerializeByte)
  // optional bytes buffer = 1;
  if (this->buffer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->buffer(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.SerializeByte)
}

::google::protobuf::uint8* SerializeByte::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.SerializeByte)
  // optional bytes buffer = 1;
  if (this->buffer().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->buffer(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.SerializeByte)
  return target;
}

int SerializeByte::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.SerializeByte)
  int total_size = 0;

  // optional bytes buffer = 1;
  if (this->buffer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buffer());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SerializeByte::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.SerializeByte)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SerializeByte* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializeByte>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.SerializeByte)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.SerializeByte)
    MergeFrom(*source);
  }
}

void SerializeByte::MergeFrom(const SerializeByte& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.SerializeByte)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.buffer().size() > 0) {

    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
}

void SerializeByte::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.SerializeByte)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializeByte::CopyFrom(const SerializeByte& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.SerializeByte)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializeByte::IsInitialized() const {

  return true;
}

void SerializeByte::Swap(SerializeByte* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializeByte::InternalSwap(SerializeByte* other) {
  buffer_.Swap(&other->buffer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SerializeByte::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SerializeByte_descriptor_;
  metadata.reflection = SerializeByte_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SerializeByte

// optional bytes buffer = 1;
void SerializeByte::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SerializeByte::buffer() const {
  // @@protoc_insertion_point(field_get:nfsfuse.SerializeByte.buffer)
  return buffer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SerializeByte::set_buffer(const ::std::string& value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.SerializeByte.buffer)
}
 void SerializeByte::set_buffer(const char* value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.SerializeByte.buffer)
}
 void SerializeByte::set_buffer(const void* value, size_t size) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.SerializeByte.buffer)
}
 ::std::string* SerializeByte::mutable_buffer() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.SerializeByte.buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SerializeByte::release_buffer() {
  // @@protoc_insertion_point(field_release:nfsfuse.SerializeByte.buffer)
  
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SerializeByte::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    
  } else {
    
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.SerializeByte.buffer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int String::kStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

String::String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.String)
}

void String::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

String::String(const String& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.String)
}

void String::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

String::~String() {
  // @@protoc_insertion_point(destructor:nfsfuse.String)
  SharedDtor();
}

void String::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void String::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* String::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return String_descriptor_;
}

const String& String::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

String* String::default_instance_ = NULL;

String* String::New(::google::protobuf::Arena* arena) const {
  String* n = new String;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void String::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.String)
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.String)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string str = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.String.str"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.String)
  return false;
#undef DO_
}

void String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.String)
  // optional string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.String.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->str(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.String)
}

::google::protobuf::uint8* String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.String)
  // optional string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.String.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.String)
  return target;
}

int String::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.String)
  int total_size = 0;

  // optional string str = 1;
  if (this->str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.String)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const String* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.String)
    MergeFrom(*source);
  }
}

void String::MergeFrom(const String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.String)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.str().size() > 0) {

    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
}

void String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void String::CopyFrom(const String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool String::IsInitialized() const {

  return true;
}

void String::Swap(String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void String::InternalSwap(String* other) {
  str_.Swap(&other->str_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata String::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = String_descriptor_;
  metadata.reflection = String_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// String

// optional string str = 1;
void String::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& String::str() const {
  // @@protoc_insertion_point(field_get:nfsfuse.String.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void String::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.String.str)
}
 void String::set_str(const char* value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.String.str)
}
 void String::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.String.str)
}
 ::std::string* String::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.String.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* String::release_str() {
  // @@protoc_insertion_point(field_release:nfsfuse.String.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void String::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.String.str)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dirent::kDinoFieldNumber;
const int Dirent::kDnameFieldNumber;
const int Dirent::kDtypeFieldNumber;
const int Dirent::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dirent::Dirent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.Dirent)
}

void Dirent::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Dirent::Dirent(const Dirent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.Dirent)
}

void Dirent::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dino_ = 0u;
  dname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dtype_ = 0u;
  err_ = 0u;
}

Dirent::~Dirent() {
  // @@protoc_insertion_point(destructor:nfsfuse.Dirent)
  SharedDtor();
}

void Dirent::SharedDtor() {
  dname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Dirent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Dirent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Dirent_descriptor_;
}

const Dirent& Dirent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

Dirent* Dirent::default_instance_ = NULL;

Dirent* Dirent::New(::google::protobuf::Arena* arena) const {
  Dirent* n = new Dirent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Dirent::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.Dirent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Dirent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Dirent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(dino_, err_);
  dname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Dirent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.Dirent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 dino = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dino_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dname;
        break;
      }

      // optional string dname = 2;
      case 2: {
        if (tag == 18) {
         parse_dname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dname().data(), this->dname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.Dirent.dname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dtype;
        break;
      }

      // optional uint32 dtype = 3;
      case 3: {
        if (tag == 24) {
         parse_dtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_err;
        break;
      }

      // optional uint32 err = 4;
      case 4: {
        if (tag == 32) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &err_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.Dirent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.Dirent)
  return false;
#undef DO_
}

void Dirent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.Dirent)
  // optional uint32 dino = 1;
  if (this->dino() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dino(), output);
  }

  // optional string dname = 2;
  if (this->dname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dname().data(), this->dname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.Dirent.dname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dname(), output);
  }

  // optional uint32 dtype = 3;
  if (this->dtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dtype(), output);
  }

  // optional uint32 err = 4;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.Dirent)
}

::google::protobuf::uint8* Dirent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.Dirent)
  // optional uint32 dino = 1;
  if (this->dino() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dino(), target);
  }

  // optional string dname = 2;
  if (this->dname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dname().data(), this->dname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.Dirent.dname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dname(), target);
  }

  // optional uint32 dtype = 3;
  if (this->dtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dtype(), target);
  }

  // optional uint32 err = 4;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.Dirent)
  return target;
}

int Dirent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.Dirent)
  int total_size = 0;

  // optional uint32 dino = 1;
  if (this->dino() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dino());
  }

  // optional string dname = 2;
  if (this->dname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dname());
  }

  // optional uint32 dtype = 3;
  if (this->dtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dtype());
  }

  // optional uint32 err = 4;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->err());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Dirent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.Dirent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Dirent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Dirent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.Dirent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.Dirent)
    MergeFrom(*source);
  }
}

void Dirent::MergeFrom(const Dirent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.Dirent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.dino() != 0) {
    set_dino(from.dino());
  }
  if (from.dname().size() > 0) {

    dname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dname_);
  }
  if (from.dtype() != 0) {
    set_dtype(from.dtype());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void Dirent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.Dirent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dirent::CopyFrom(const Dirent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.Dirent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dirent::IsInitialized() const {

  return true;
}

void Dirent::Swap(Dirent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dirent::InternalSwap(Dirent* other) {
  std::swap(dino_, other->dino_);
  dname_.Swap(&other->dname_);
  std::swap(dtype_, other->dtype_);
  std::swap(err_, other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Dirent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Dirent_descriptor_;
  metadata.reflection = Dirent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Dirent

// optional uint32 dino = 1;
void Dirent::clear_dino() {
  dino_ = 0u;
}
 ::google::protobuf::uint32 Dirent::dino() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Dirent.dino)
  return dino_;
}
 void Dirent::set_dino(::google::protobuf::uint32 value) {
  
  dino_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Dirent.dino)
}

// optional string dname = 2;
void Dirent::clear_dname() {
  dname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Dirent::dname() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Dirent.dname)
  return dname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Dirent::set_dname(const ::std::string& value) {
  
  dname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.Dirent.dname)
}
 void Dirent::set_dname(const char* value) {
  
  dname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.Dirent.dname)
}
 void Dirent::set_dname(const char* value, size_t size) {
  
  dname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.Dirent.dname)
}
 ::std::string* Dirent::mutable_dname() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.Dirent.dname)
  return dname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Dirent::release_dname() {
  // @@protoc_insertion_point(field_release:nfsfuse.Dirent.dname)
  
  return dname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Dirent::set_allocated_dname(::std::string* dname) {
  if (dname != NULL) {
    
  } else {
    
  }
  dname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dname);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.Dirent.dname)
}

// optional uint32 dtype = 3;
void Dirent::clear_dtype() {
  dtype_ = 0u;
}
 ::google::protobuf::uint32 Dirent::dtype() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Dirent.dtype)
  return dtype_;
}
 void Dirent::set_dtype(::google::protobuf::uint32 value) {
  
  dtype_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Dirent.dtype)
}

// optional uint32 err = 4;
void Dirent::clear_err() {
  err_ = 0u;
}
 ::google::protobuf::uint32 Dirent::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Dirent.err)
  return err_;
}
 void Dirent::set_err(::google::protobuf::uint32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Dirent.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stat::kDevFieldNumber;
const int Stat::kInoFieldNumber;
const int Stat::kModeFieldNumber;
const int Stat::kNlinkFieldNumber;
const int Stat::kUidFieldNumber;
const int Stat::kGidFieldNumber;
const int Stat::kSizeFieldNumber;
const int Stat::kBlksizeFieldNumber;
const int Stat::kBlocksFieldNumber;
const int Stat::kAtimeFieldNumber;
const int Stat::kMtimeFieldNumber;
const int Stat::kCtimeFieldNumber;
const int Stat::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stat::Stat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.Stat)
}

void Stat::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Stat::Stat(const Stat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.Stat)
}

void Stat::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  dev_ = 0u;
  ino_ = 0u;
  mode_ = 0u;
  nlink_ = 0u;
  uid_ = 0u;
  gid_ = 0u;
  size_ = GOOGLE_LONGLONG(0);
  blksize_ = GOOGLE_LONGLONG(0);
  blocks_ = GOOGLE_LONGLONG(0);
  atime_ = 0u;
  mtime_ = 0u;
  ctime_ = 0u;
  err_ = 0u;
}

Stat::~Stat() {
  // @@protoc_insertion_point(destructor:nfsfuse.Stat)
  SharedDtor();
}

void Stat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Stat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Stat_descriptor_;
}

const Stat& Stat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

Stat* Stat::default_instance_ = NULL;

Stat* Stat::New(::google::protobuf::Arena* arena) const {
  Stat* n = new Stat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stat::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.Stat)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Stat, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Stat*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(dev_, blksize_);
  ZR_(blocks_, err_);

#undef ZR_HELPER_
#undef ZR_

}

bool Stat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.Stat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 dev = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dev_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ino;
        break;
      }

      // optional uint32 ino = 2;
      case 2: {
        if (tag == 16) {
         parse_ino:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ino_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mode;
        break;
      }

      // optional uint32 mode = 3;
      case 3: {
        if (tag == 24) {
         parse_mode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_nlink;
        break;
      }

      // optional uint32 nlink = 4;
      case 4: {
        if (tag == 32) {
         parse_nlink:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nlink_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_uid;
        break;
      }

      // optional uint32 uid = 5;
      case 5: {
        if (tag == 40) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_gid;
        break;
      }

      // optional uint32 gid = 6;
      case 6: {
        if (tag == 48) {
         parse_gid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_size;
        break;
      }

      // optional sint64 size = 7;
      case 7: {
        if (tag == 56) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_blksize;
        break;
      }

      // optional sint64 blksize = 8;
      case 8: {
        if (tag == 64) {
         parse_blksize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &blksize_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_blocks;
        break;
      }

      // optional sint64 blocks = 9;
      case 9: {
        if (tag == 72) {
         parse_blocks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &blocks_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_atime;
        break;
      }

      // optional uint32 atime = 10;
      case 10: {
        if (tag == 80) {
         parse_atime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_mtime;
        break;
      }

      // optional uint32 mtime = 11;
      case 11: {
        if (tag == 88) {
         parse_mtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_ctime;
        break;
      }

      // optional uint32 ctime = 12;
      case 12: {
        if (tag == 96) {
         parse_ctime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ctime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_err;
        break;
      }

      // optional uint32 err = 14;
      case 14: {
        if (tag == 112) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &err_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.Stat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.Stat)
  return false;
#undef DO_
}

void Stat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.Stat)
  // optional uint32 dev = 1;
  if (this->dev() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dev(), output);
  }

  // optional uint32 ino = 2;
  if (this->ino() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ino(), output);
  }

  // optional uint32 mode = 3;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mode(), output);
  }

  // optional uint32 nlink = 4;
  if (this->nlink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->nlink(), output);
  }

  // optional uint32 uid = 5;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uid(), output);
  }

  // optional uint32 gid = 6;
  if (this->gid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->gid(), output);
  }

  // optional sint64 size = 7;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(7, this->size(), output);
  }

  // optional sint64 blksize = 8;
  if (this->blksize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(8, this->blksize(), output);
  }

  // optional sint64 blocks = 9;
  if (this->blocks() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(9, this->blocks(), output);
  }

  // optional uint32 atime = 10;
  if (this->atime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->atime(), output);
  }

  // optional uint32 mtime = 11;
  if (this->mtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->mtime(), output);
  }

  // optional uint32 ctime = 12;
  if (this->ctime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->ctime(), output);
  }

  // optional uint32 err = 14;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.Stat)
}

::google::protobuf::uint8* Stat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.Stat)
  // optional uint32 dev = 1;
  if (this->dev() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dev(), target);
  }

  // optional uint32 ino = 2;
  if (this->ino() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ino(), target);
  }

  // optional uint32 mode = 3;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mode(), target);
  }

  // optional uint32 nlink = 4;
  if (this->nlink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->nlink(), target);
  }

  // optional uint32 uid = 5;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uid(), target);
  }

  // optional uint32 gid = 6;
  if (this->gid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->gid(), target);
  }

  // optional sint64 size = 7;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(7, this->size(), target);
  }

  // optional sint64 blksize = 8;
  if (this->blksize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(8, this->blksize(), target);
  }

  // optional sint64 blocks = 9;
  if (this->blocks() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(9, this->blocks(), target);
  }

  // optional uint32 atime = 10;
  if (this->atime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->atime(), target);
  }

  // optional uint32 mtime = 11;
  if (this->mtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->mtime(), target);
  }

  // optional uint32 ctime = 12;
  if (this->ctime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->ctime(), target);
  }

  // optional uint32 err = 14;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.Stat)
  return target;
}

int Stat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.Stat)
  int total_size = 0;

  // optional uint32 dev = 1;
  if (this->dev() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dev());
  }

  // optional uint32 ino = 2;
  if (this->ino() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ino());
  }

  // optional uint32 mode = 3;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mode());
  }

  // optional uint32 nlink = 4;
  if (this->nlink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nlink());
  }

  // optional uint32 uid = 5;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // optional uint32 gid = 6;
  if (this->gid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gid());
  }

  // optional sint64 size = 7;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->size());
  }

  // optional sint64 blksize = 8;
  if (this->blksize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->blksize());
  }

  // optional sint64 blocks = 9;
  if (this->blocks() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->blocks());
  }

  // optional uint32 atime = 10;
  if (this->atime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->atime());
  }

  // optional uint32 mtime = 11;
  if (this->mtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mtime());
  }

  // optional uint32 ctime = 12;
  if (this->ctime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ctime());
  }

  // optional uint32 err = 14;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->err());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.Stat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Stat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Stat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.Stat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.Stat)
    MergeFrom(*source);
  }
}

void Stat::MergeFrom(const Stat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.Stat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.dev() != 0) {
    set_dev(from.dev());
  }
  if (from.ino() != 0) {
    set_ino(from.ino());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.nlink() != 0) {
    set_nlink(from.nlink());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.gid() != 0) {
    set_gid(from.gid());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.blksize() != 0) {
    set_blksize(from.blksize());
  }
  if (from.blocks() != 0) {
    set_blocks(from.blocks());
  }
  if (from.atime() != 0) {
    set_atime(from.atime());
  }
  if (from.mtime() != 0) {
    set_mtime(from.mtime());
  }
  if (from.ctime() != 0) {
    set_ctime(from.ctime());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void Stat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stat::CopyFrom(const Stat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stat::IsInitialized() const {

  return true;
}

void Stat::Swap(Stat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stat::InternalSwap(Stat* other) {
  std::swap(dev_, other->dev_);
  std::swap(ino_, other->ino_);
  std::swap(mode_, other->mode_);
  std::swap(nlink_, other->nlink_);
  std::swap(uid_, other->uid_);
  std::swap(gid_, other->gid_);
  std::swap(size_, other->size_);
  std::swap(blksize_, other->blksize_);
  std::swap(blocks_, other->blocks_);
  std::swap(atime_, other->atime_);
  std::swap(mtime_, other->mtime_);
  std::swap(ctime_, other->ctime_);
  std::swap(err_, other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Stat_descriptor_;
  metadata.reflection = Stat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Stat

// optional uint32 dev = 1;
void Stat::clear_dev() {
  dev_ = 0u;
}
 ::google::protobuf::uint32 Stat::dev() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.dev)
  return dev_;
}
 void Stat::set_dev(::google::protobuf::uint32 value) {
  
  dev_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.dev)
}

// optional uint32 ino = 2;
void Stat::clear_ino() {
  ino_ = 0u;
}
 ::google::protobuf::uint32 Stat::ino() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.ino)
  return ino_;
}
 void Stat::set_ino(::google::protobuf::uint32 value) {
  
  ino_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.ino)
}

// optional uint32 mode = 3;
void Stat::clear_mode() {
  mode_ = 0u;
}
 ::google::protobuf::uint32 Stat::mode() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.mode)
  return mode_;
}
 void Stat::set_mode(::google::protobuf::uint32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.mode)
}

// optional uint32 nlink = 4;
void Stat::clear_nlink() {
  nlink_ = 0u;
}
 ::google::protobuf::uint32 Stat::nlink() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.nlink)
  return nlink_;
}
 void Stat::set_nlink(::google::protobuf::uint32 value) {
  
  nlink_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.nlink)
}

// optional uint32 uid = 5;
void Stat::clear_uid() {
  uid_ = 0u;
}
 ::google::protobuf::uint32 Stat::uid() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.uid)
  return uid_;
}
 void Stat::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.uid)
}

// optional uint32 gid = 6;
void Stat::clear_gid() {
  gid_ = 0u;
}
 ::google::protobuf::uint32 Stat::gid() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.gid)
  return gid_;
}
 void Stat::set_gid(::google::protobuf::uint32 value) {
  
  gid_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.gid)
}

// optional sint64 size = 7;
void Stat::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Stat::size() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.size)
  return size_;
}
 void Stat::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.size)
}

// optional sint64 blksize = 8;
void Stat::clear_blksize() {
  blksize_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Stat::blksize() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.blksize)
  return blksize_;
}
 void Stat::set_blksize(::google::protobuf::int64 value) {
  
  blksize_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.blksize)
}

// optional sint64 blocks = 9;
void Stat::clear_blocks() {
  blocks_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Stat::blocks() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.blocks)
  return blocks_;
}
 void Stat::set_blocks(::google::protobuf::int64 value) {
  
  blocks_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.blocks)
}

// optional uint32 atime = 10;
void Stat::clear_atime() {
  atime_ = 0u;
}
 ::google::protobuf::uint32 Stat::atime() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.atime)
  return atime_;
}
 void Stat::set_atime(::google::protobuf::uint32 value) {
  
  atime_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.atime)
}

// optional uint32 mtime = 11;
void Stat::clear_mtime() {
  mtime_ = 0u;
}
 ::google::protobuf::uint32 Stat::mtime() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.mtime)
  return mtime_;
}
 void Stat::set_mtime(::google::protobuf::uint32 value) {
  
  mtime_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.mtime)
}

// optional uint32 ctime = 12;
void Stat::clear_ctime() {
  ctime_ = 0u;
}
 ::google::protobuf::uint32 Stat::ctime() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.ctime)
  return ctime_;
}
 void Stat::set_ctime(::google::protobuf::uint32 value) {
  
  ctime_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.ctime)
}

// optional uint32 err = 14;
void Stat::clear_err() {
  err_ = 0u;
}
 ::google::protobuf::uint32 Stat::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.err)
  return err_;
}
 void Stat::set_err(::google::protobuf::uint32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FuseFileInfo::kFlagsFieldNumber;
const int FuseFileInfo::kFhFieldNumber;
const int FuseFileInfo::kOldfhFieldNumber;
const int FuseFileInfo::kLockownerFieldNumber;
const int FuseFileInfo::kPolleventFieldNumber;
const int FuseFileInfo::kErrFieldNumber;
const int FuseFileInfo::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FuseFileInfo::FuseFileInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.FuseFileInfo)
}

void FuseFileInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FuseFileInfo::FuseFileInfo(const FuseFileInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.FuseFileInfo)
}

void FuseFileInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  flags_ = 0;
  fh_ = 0;
  oldfh_ = 0u;
  lockowner_ = GOOGLE_ULONGLONG(0);
  pollevent_ = 0u;
  err_ = 0u;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FuseFileInfo::~FuseFileInfo() {
  // @@protoc_insertion_point(destructor:nfsfuse.FuseFileInfo)
  SharedDtor();
}

void FuseFileInfo::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FuseFileInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FuseFileInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FuseFileInfo_descriptor_;
}

const FuseFileInfo& FuseFileInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

FuseFileInfo* FuseFileInfo::default_instance_ = NULL;

FuseFileInfo* FuseFileInfo::New(::google::protobuf::Arena* arena) const {
  FuseFileInfo* n = new FuseFileInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FuseFileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.FuseFileInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FuseFileInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FuseFileInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(flags_, pollevent_);
  err_ = 0u;
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool FuseFileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.FuseFileInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flags = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_fh;
        break;
      }

      // optional int32 fh = 2;
      case 2: {
        if (tag == 16) {
         parse_fh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_oldfh;
        break;
      }

      // optional uint32 oldfh = 3;
      case 3: {
        if (tag == 24) {
         parse_oldfh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oldfh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_err;
        break;
      }

      // optional uint32 err = 4;
      case 4: {
        if (tag == 32) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &err_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_lockowner;
        break;
      }

      // optional uint64 lockowner = 5;
      case 5: {
        if (tag == 40) {
         parse_lockowner:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lockowner_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_pollevent;
        break;
      }

      // optional uint32 pollevent = 6;
      case 6: {
        if (tag == 48) {
         parse_pollevent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pollevent_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_path;
        break;
      }

      // optional string path = 7;
      case 7: {
        if (tag == 58) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.FuseFileInfo.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.FuseFileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.FuseFileInfo)
  return false;
#undef DO_
}

void FuseFileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.FuseFileInfo)
  // optional int32 flags = 1;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flags(), output);
  }

  // optional int32 fh = 2;
  if (this->fh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fh(), output);
  }

  // optional uint32 oldfh = 3;
  if (this->oldfh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->oldfh(), output);
  }

  // optional uint32 err = 4;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->err(), output);
  }

  // optional uint64 lockowner = 5;
  if (this->lockowner() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->lockowner(), output);
  }

  // optional uint32 pollevent = 6;
  if (this->pollevent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pollevent(), output);
  }

  // optional string path = 7;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.FuseFileInfo.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->path(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.FuseFileInfo)
}

::google::protobuf::uint8* FuseFileInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.FuseFileInfo)
  // optional int32 flags = 1;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flags(), target);
  }

  // optional int32 fh = 2;
  if (this->fh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fh(), target);
  }

  // optional uint32 oldfh = 3;
  if (this->oldfh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->oldfh(), target);
  }

  // optional uint32 err = 4;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->err(), target);
  }

  // optional uint64 lockowner = 5;
  if (this->lockowner() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->lockowner(), target);
  }

  // optional uint32 pollevent = 6;
  if (this->pollevent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pollevent(), target);
  }

  // optional string path = 7;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.FuseFileInfo.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->path(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.FuseFileInfo)
  return target;
}

int FuseFileInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.FuseFileInfo)
  int total_size = 0;

  // optional int32 flags = 1;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flags());
  }

  // optional int32 fh = 2;
  if (this->fh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fh());
  }

  // optional uint32 oldfh = 3;
  if (this->oldfh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->oldfh());
  }

  // optional uint64 lockowner = 5;
  if (this->lockowner() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lockowner());
  }

  // optional uint32 pollevent = 6;
  if (this->pollevent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pollevent());
  }

  // optional uint32 err = 4;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->err());
  }

  // optional string path = 7;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FuseFileInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.FuseFileInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FuseFileInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FuseFileInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.FuseFileInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.FuseFileInfo)
    MergeFrom(*source);
  }
}

void FuseFileInfo::MergeFrom(const FuseFileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.FuseFileInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
  if (from.fh() != 0) {
    set_fh(from.fh());
  }
  if (from.oldfh() != 0) {
    set_oldfh(from.oldfh());
  }
  if (from.lockowner() != 0) {
    set_lockowner(from.lockowner());
  }
  if (from.pollevent() != 0) {
    set_pollevent(from.pollevent());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void FuseFileInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.FuseFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FuseFileInfo::CopyFrom(const FuseFileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.FuseFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FuseFileInfo::IsInitialized() const {

  return true;
}

void FuseFileInfo::Swap(FuseFileInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FuseFileInfo::InternalSwap(FuseFileInfo* other) {
  std::swap(flags_, other->flags_);
  std::swap(fh_, other->fh_);
  std::swap(oldfh_, other->oldfh_);
  std::swap(lockowner_, other->lockowner_);
  std::swap(pollevent_, other->pollevent_);
  std::swap(err_, other->err_);
  path_.Swap(&other->path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FuseFileInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FuseFileInfo_descriptor_;
  metadata.reflection = FuseFileInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FuseFileInfo

// optional int32 flags = 1;
void FuseFileInfo::clear_flags() {
  flags_ = 0;
}
 ::google::protobuf::int32 FuseFileInfo::flags() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.flags)
  return flags_;
}
 void FuseFileInfo::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.flags)
}

// optional int32 fh = 2;
void FuseFileInfo::clear_fh() {
  fh_ = 0;
}
 ::google::protobuf::int32 FuseFileInfo::fh() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.fh)
  return fh_;
}
 void FuseFileInfo::set_fh(::google::protobuf::int32 value) {
  
  fh_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.fh)
}

// optional uint32 oldfh = 3;
void FuseFileInfo::clear_oldfh() {
  oldfh_ = 0u;
}
 ::google::protobuf::uint32 FuseFileInfo::oldfh() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.oldfh)
  return oldfh_;
}
 void FuseFileInfo::set_oldfh(::google::protobuf::uint32 value) {
  
  oldfh_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.oldfh)
}

// optional uint64 lockowner = 5;
void FuseFileInfo::clear_lockowner() {
  lockowner_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 FuseFileInfo::lockowner() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.lockowner)
  return lockowner_;
}
 void FuseFileInfo::set_lockowner(::google::protobuf::uint64 value) {
  
  lockowner_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.lockowner)
}

// optional uint32 pollevent = 6;
void FuseFileInfo::clear_pollevent() {
  pollevent_ = 0u;
}
 ::google::protobuf::uint32 FuseFileInfo::pollevent() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.pollevent)
  return pollevent_;
}
 void FuseFileInfo::set_pollevent(::google::protobuf::uint32 value) {
  
  pollevent_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.pollevent)
}

// optional uint32 err = 4;
void FuseFileInfo::clear_err() {
  err_ = 0u;
}
 ::google::protobuf::uint32 FuseFileInfo::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.err)
  return err_;
}
 void FuseFileInfo::set_err(::google::protobuf::uint32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.err)
}

// optional string path = 7;
void FuseFileInfo::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FuseFileInfo::path() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FuseFileInfo::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.path)
}
 void FuseFileInfo::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.FuseFileInfo.path)
}
 void FuseFileInfo::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.FuseFileInfo.path)
}
 ::std::string* FuseFileInfo::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.FuseFileInfo.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FuseFileInfo::release_path() {
  // @@protoc_insertion_point(field_release:nfsfuse.FuseFileInfo.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FuseFileInfo::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.FuseFileInfo.path)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResult::kBytesreadFieldNumber;
const int ReadResult::kBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResult::ReadResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.ReadResult)
}

void ReadResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ReadResult::ReadResult(const ReadResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.ReadResult)
}

void ReadResult::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bytesread_ = 0;
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReadResult::~ReadResult() {
  // @@protoc_insertion_point(destructor:nfsfuse.ReadResult)
  SharedDtor();
}

void ReadResult::SharedDtor() {
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ReadResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadResult_descriptor_;
}

const ReadResult& ReadResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

ReadResult* ReadResult::default_instance_ = NULL;

ReadResult* ReadResult::New(::google::protobuf::Arena* arena) const {
  ReadResult* n = new ReadResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadResult::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.ReadResult)
  bytesread_ = 0;
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReadResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.ReadResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bytesread = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bytesread_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_buffer;
        break;
      }

      // optional bytes buffer = 2;
      case 2: {
        if (tag == 18) {
         parse_buffer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.ReadResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.ReadResult)
  return false;
#undef DO_
}

void ReadResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.ReadResult)
  // optional int32 bytesread = 1;
  if (this->bytesread() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bytesread(), output);
  }

  // optional bytes buffer = 2;
  if (this->buffer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->buffer(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.ReadResult)
}

::google::protobuf::uint8* ReadResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.ReadResult)
  // optional int32 bytesread = 1;
  if (this->bytesread() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bytesread(), target);
  }

  // optional bytes buffer = 2;
  if (this->buffer().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->buffer(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.ReadResult)
  return target;
}

int ReadResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.ReadResult)
  int total_size = 0;

  // optional int32 bytesread = 1;
  if (this->bytesread() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bytesread());
  }

  // optional bytes buffer = 2;
  if (this->buffer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buffer());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.ReadResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReadResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.ReadResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.ReadResult)
    MergeFrom(*source);
  }
}

void ReadResult::MergeFrom(const ReadResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.ReadResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.bytesread() != 0) {
    set_bytesread(from.bytesread());
  }
  if (from.buffer().size() > 0) {

    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
}

void ReadResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.ReadResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResult::CopyFrom(const ReadResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.ReadResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadResult::IsInitialized() const {

  return true;
}

void ReadResult::Swap(ReadResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadResult::InternalSwap(ReadResult* other) {
  std::swap(bytesread_, other->bytesread_);
  buffer_.Swap(&other->buffer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadResult_descriptor_;
  metadata.reflection = ReadResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadResult

// optional int32 bytesread = 1;
void ReadResult::clear_bytesread() {
  bytesread_ = 0;
}
 ::google::protobuf::int32 ReadResult::bytesread() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadResult.bytesread)
  return bytesread_;
}
 void ReadResult::set_bytesread(::google::protobuf::int32 value) {
  
  bytesread_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.ReadResult.bytesread)
}

// optional bytes buffer = 2;
void ReadResult::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ReadResult::buffer() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadResult.buffer)
  return buffer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReadResult::set_buffer(const ::std::string& value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.ReadResult.buffer)
}
 void ReadResult::set_buffer(const char* value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.ReadResult.buffer)
}
 void ReadResult::set_buffer(const void* value, size_t size) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.ReadResult.buffer)
}
 ::std::string* ReadResult::mutable_buffer() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.ReadResult.buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReadResult::release_buffer() {
  // @@protoc_insertion_point(field_release:nfsfuse.ReadResult.buffer)
  
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReadResult::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    
  } else {
    
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.ReadResult.buffer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRequest::kPathFieldNumber;
const int ReadRequest::kSizeFieldNumber;
const int ReadRequest::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRequest::ReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.ReadRequest)
}

void ReadRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ReadRequest::ReadRequest(const ReadRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.ReadRequest)
}

void ReadRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0u;
  offset_ = GOOGLE_LONGLONG(0);
}

ReadRequest::~ReadRequest() {
  // @@protoc_insertion_point(destructor:nfsfuse.ReadRequest)
  SharedDtor();
}

void ReadRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ReadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadRequest_descriptor_;
}

const ReadRequest& ReadRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

ReadRequest* ReadRequest::default_instance_ = NULL;

ReadRequest* ReadRequest::New(::google::protobuf::Arena* arena) const {
  ReadRequest* n = new ReadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.ReadRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ReadRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ReadRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(offset_, size_);
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.ReadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.ReadRequest.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_size;
        break;
      }

      // optional uint32 size = 2;
      case 2: {
        if (tag == 16) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_offset;
        break;
      }

      // optional int64 offset = 3;
      case 3: {
        if (tag == 24) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.ReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.ReadRequest)
  return false;
#undef DO_
}

void ReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.ReadRequest)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.ReadRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional uint32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->size(), output);
  }

  // optional int64 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->offset(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.ReadRequest)
}

::google::protobuf::uint8* ReadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.ReadRequest)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.ReadRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional uint32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->size(), target);
  }

  // optional int64 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->offset(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.ReadRequest)
  return target;
}

int ReadRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.ReadRequest)
  int total_size = 0;

  // optional string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional uint32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  // optional int64 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->offset());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.ReadRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReadRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.ReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.ReadRequest)
    MergeFrom(*source);
  }
}

void ReadRequest::MergeFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.ReadRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
}

void ReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRequest::CopyFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRequest::IsInitialized() const {

  return true;
}

void ReadRequest::Swap(ReadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRequest::InternalSwap(ReadRequest* other) {
  path_.Swap(&other->path_);
  std::swap(size_, other->size_);
  std::swap(offset_, other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadRequest_descriptor_;
  metadata.reflection = ReadRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadRequest

// optional string path = 1;
void ReadRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ReadRequest::path() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReadRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.ReadRequest.path)
}
 void ReadRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.ReadRequest.path)
}
 void ReadRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.ReadRequest.path)
}
 ::std::string* ReadRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.ReadRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReadRequest::release_path() {
  // @@protoc_insertion_point(field_release:nfsfuse.ReadRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReadRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.ReadRequest.path)
}

// optional uint32 size = 2;
void ReadRequest::clear_size() {
  size_ = 0u;
}
 ::google::protobuf::uint32 ReadRequest::size() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadRequest.size)
  return size_;
}
 void ReadRequest::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.ReadRequest.size)
}

// optional int64 offset = 3;
void ReadRequest::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ReadRequest::offset() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadRequest.offset)
  return offset_;
}
 void ReadRequest::set_offset(::google::protobuf::int64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.ReadRequest.offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteRequest::kPathFieldNumber;
const int WriteRequest::kSizeFieldNumber;
const int WriteRequest::kOffsetFieldNumber;
const int WriteRequest::kBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteRequest::WriteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.WriteRequest)
}

void WriteRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

WriteRequest::WriteRequest(const WriteRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.WriteRequest)
}

void WriteRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0u;
  offset_ = 0;
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WriteRequest::~WriteRequest() {
  // @@protoc_insertion_point(destructor:nfsfuse.WriteRequest)
  SharedDtor();
}

void WriteRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void WriteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WriteRequest_descriptor_;
}

const WriteRequest& WriteRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

WriteRequest* WriteRequest::default_instance_ = NULL;

WriteRequest* WriteRequest::New(::google::protobuf::Arena* arena) const {
  WriteRequest* n = new WriteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.WriteRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WriteRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WriteRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(size_, offset_);
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool WriteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.WriteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.WriteRequest.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_size;
        break;
      }

      // optional uint32 size = 2;
      case 2: {
        if (tag == 16) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_offset;
        break;
      }

      // optional int32 offset = 3;
      case 3: {
        if (tag == 24) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_buffer;
        break;
      }

      // optional bytes buffer = 4;
      case 4: {
        if (tag == 34) {
         parse_buffer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.WriteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.WriteRequest)
  return false;
#undef DO_
}

void WriteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.WriteRequest)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.WriteRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional uint32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->size(), output);
  }

  // optional int32 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->offset(), output);
  }

  // optional bytes buffer = 4;
  if (this->buffer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->buffer(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.WriteRequest)
}

::google::protobuf::uint8* WriteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.WriteRequest)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.WriteRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional uint32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->size(), target);
  }

  // optional int32 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->offset(), target);
  }

  // optional bytes buffer = 4;
  if (this->buffer().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->buffer(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.WriteRequest)
  return target;
}

int WriteRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.WriteRequest)
  int total_size = 0;

  // optional string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional uint32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  // optional int32 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  // optional bytes buffer = 4;
  if (this->buffer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buffer());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.WriteRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const WriteRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.WriteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.WriteRequest)
    MergeFrom(*source);
  }
}

void WriteRequest::MergeFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.WriteRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.buffer().size() > 0) {

    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
}

void WriteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteRequest::CopyFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteRequest::IsInitialized() const {

  return true;
}

void WriteRequest::Swap(WriteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteRequest::InternalSwap(WriteRequest* other) {
  path_.Swap(&other->path_);
  std::swap(size_, other->size_);
  std::swap(offset_, other->offset_);
  buffer_.Swap(&other->buffer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WriteRequest_descriptor_;
  metadata.reflection = WriteRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteRequest

// optional string path = 1;
void WriteRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WriteRequest::path() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WriteRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.WriteRequest.path)
}
 void WriteRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.WriteRequest.path)
}
 void WriteRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.WriteRequest.path)
}
 ::std::string* WriteRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.WriteRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WriteRequest::release_path() {
  // @@protoc_insertion_point(field_release:nfsfuse.WriteRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WriteRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.WriteRequest.path)
}

// optional uint32 size = 2;
void WriteRequest::clear_size() {
  size_ = 0u;
}
 ::google::protobuf::uint32 WriteRequest::size() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteRequest.size)
  return size_;
}
 void WriteRequest::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.WriteRequest.size)
}

// optional int32 offset = 3;
void WriteRequest::clear_offset() {
  offset_ = 0;
}
 ::google::protobuf::int32 WriteRequest::offset() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteRequest.offset)
  return offset_;
}
 void WriteRequest::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.WriteRequest.offset)
}

// optional bytes buffer = 4;
void WriteRequest::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WriteRequest::buffer() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteRequest.buffer)
  return buffer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WriteRequest::set_buffer(const ::std::string& value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.WriteRequest.buffer)
}
 void WriteRequest::set_buffer(const char* value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.WriteRequest.buffer)
}
 void WriteRequest::set_buffer(const void* value, size_t size) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.WriteRequest.buffer)
}
 ::std::string* WriteRequest::mutable_buffer() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.WriteRequest.buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WriteRequest::release_buffer() {
  // @@protoc_insertion_point(field_release:nfsfuse.WriteRequest.buffer)
  
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WriteRequest::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    
  } else {
    
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.WriteRequest.buffer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteResult::kNbytesFieldNumber;
const int WriteResult::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteResult::WriteResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.WriteResult)
}

void WriteResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

WriteResult::WriteResult(const WriteResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.WriteResult)
}

void WriteResult::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  nbytes_ = 0;
  err_ = 0;
}

WriteResult::~WriteResult() {
  // @@protoc_insertion_point(destructor:nfsfuse.WriteResult)
  SharedDtor();
}

void WriteResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WriteResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WriteResult_descriptor_;
}

const WriteResult& WriteResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

WriteResult* WriteResult::default_instance_ = NULL;

WriteResult* WriteResult::New(::google::protobuf::Arena* arena) const {
  WriteResult* n = new WriteResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteResult::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.WriteResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WriteResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WriteResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(nbytes_, err_);

#undef ZR_HELPER_
#undef ZR_

}

bool WriteResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.WriteResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 nbytes = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nbytes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional int32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.WriteResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.WriteResult)
  return false;
#undef DO_
}

void WriteResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.WriteResult)
  // optional int32 nbytes = 1;
  if (this->nbytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nbytes(), output);
  }

  // optional int32 err = 2;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.WriteResult)
}

::google::protobuf::uint8* WriteResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.WriteResult)
  // optional int32 nbytes = 1;
  if (this->nbytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nbytes(), target);
  }

  // optional int32 err = 2;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.WriteResult)
  return target;
}

int WriteResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.WriteResult)
  int total_size = 0;

  // optional int32 nbytes = 1;
  if (this->nbytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nbytes());
  }

  // optional int32 err = 2;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.WriteResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const WriteResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.WriteResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.WriteResult)
    MergeFrom(*source);
  }
}

void WriteResult::MergeFrom(const WriteResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.WriteResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.nbytes() != 0) {
    set_nbytes(from.nbytes());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void WriteResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.WriteResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteResult::CopyFrom(const WriteResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.WriteResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteResult::IsInitialized() const {

  return true;
}

void WriteResult::Swap(WriteResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteResult::InternalSwap(WriteResult* other) {
  std::swap(nbytes_, other->nbytes_);
  std::swap(err_, other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WriteResult_descriptor_;
  metadata.reflection = WriteResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteResult

// optional int32 nbytes = 1;
void WriteResult::clear_nbytes() {
  nbytes_ = 0;
}
 ::google::protobuf::int32 WriteResult::nbytes() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteResult.nbytes)
  return nbytes_;
}
 void WriteResult::set_nbytes(::google::protobuf::int32 value) {
  
  nbytes_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.WriteResult.nbytes)
}

// optional int32 err = 2;
void WriteResult::clear_err() {
  err_ = 0;
}
 ::google::protobuf::int32 WriteResult::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteResult.err)
  return err_;
}
 void WriteResult::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.WriteResult.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mkdir::kSFieldNumber;
const int Mkdir::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mkdir::Mkdir()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.Mkdir)
}

void Mkdir::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Mkdir::Mkdir(const Mkdir& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.Mkdir)
}

void Mkdir::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0u;
}

Mkdir::~Mkdir() {
  // @@protoc_insertion_point(destructor:nfsfuse.Mkdir)
  SharedDtor();
}

void Mkdir::SharedDtor() {
  s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Mkdir::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mkdir::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Mkdir_descriptor_;
}

const Mkdir& Mkdir::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

Mkdir* Mkdir::default_instance_ = NULL;

Mkdir* Mkdir::New(::google::protobuf::Arena* arena) const {
  Mkdir* n = new Mkdir;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mkdir::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.Mkdir)
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0u;
}

bool Mkdir::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.Mkdir)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string s = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_s()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->s().data(), this->s().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.Mkdir.s"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mode;
        break;
      }

      // optional uint32 mode = 2;
      case 2: {
        if (tag == 16) {
         parse_mode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.Mkdir)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.Mkdir)
  return false;
#undef DO_
}

void Mkdir::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.Mkdir)
  // optional string s = 1;
  if (this->s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->s().data(), this->s().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.Mkdir.s");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->s(), output);
  }

  // optional uint32 mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mode(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.Mkdir)
}

::google::protobuf::uint8* Mkdir::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.Mkdir)
  // optional string s = 1;
  if (this->s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->s().data(), this->s().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.Mkdir.s");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->s(), target);
  }

  // optional uint32 mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.Mkdir)
  return target;
}

int Mkdir::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.Mkdir)
  int total_size = 0;

  // optional string s = 1;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->s());
  }

  // optional uint32 mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mkdir::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.Mkdir)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Mkdir* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Mkdir>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.Mkdir)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.Mkdir)
    MergeFrom(*source);
  }
}

void Mkdir::MergeFrom(const Mkdir& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.Mkdir)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.s().size() > 0) {

    s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void Mkdir::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.Mkdir)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mkdir::CopyFrom(const Mkdir& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.Mkdir)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mkdir::IsInitialized() const {

  return true;
}

void Mkdir::Swap(Mkdir* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mkdir::InternalSwap(Mkdir* other) {
  s_.Swap(&other->s_);
  std::swap(mode_, other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Mkdir::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Mkdir_descriptor_;
  metadata.reflection = Mkdir_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Mkdir

// optional string s = 1;
void Mkdir::clear_s() {
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Mkdir::s() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Mkdir.s)
  return s_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Mkdir::set_s(const ::std::string& value) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.Mkdir.s)
}
 void Mkdir::set_s(const char* value) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.Mkdir.s)
}
 void Mkdir::set_s(const char* value, size_t size) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.Mkdir.s)
}
 ::std::string* Mkdir::mutable_s() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.Mkdir.s)
  return s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Mkdir::release_s() {
  // @@protoc_insertion_point(field_release:nfsfuse.Mkdir.s)
  
  return s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Mkdir::set_allocated_s(::std::string* s) {
  if (s != NULL) {
    
  } else {
    
  }
  s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.Mkdir.s)
}

// optional uint32 mode = 2;
void Mkdir::clear_mode() {
  mode_ = 0u;
}
 ::google::protobuf::uint32 Mkdir::mode() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Mkdir.mode)
  return mode_;
}
 void Mkdir::set_mode(::google::protobuf::uint32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Mkdir.mode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MkdirOutput::kStrFieldNumber;
const int MkdirOutput::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MkdirOutput::MkdirOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.MkdirOutput)
}

void MkdirOutput::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MkdirOutput::MkdirOutput(const MkdirOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.MkdirOutput)
}

void MkdirOutput::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_ = 0u;
}

MkdirOutput::~MkdirOutput() {
  // @@protoc_insertion_point(destructor:nfsfuse.MkdirOutput)
  SharedDtor();
}

void MkdirOutput::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MkdirOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MkdirOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MkdirOutput_descriptor_;
}

const MkdirOutput& MkdirOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

MkdirOutput* MkdirOutput::default_instance_ = NULL;

MkdirOutput* MkdirOutput::New(::google::protobuf::Arena* arena) const {
  MkdirOutput* n = new MkdirOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MkdirOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.MkdirOutput)
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_ = 0u;
}

bool MkdirOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.MkdirOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string str = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.MkdirOutput.str"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional uint32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &err_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.MkdirOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.MkdirOutput)
  return false;
#undef DO_
}

void MkdirOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.MkdirOutput)
  // optional string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.MkdirOutput.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->str(), output);
  }

  // optional uint32 err = 2;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.MkdirOutput)
}

::google::protobuf::uint8* MkdirOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.MkdirOutput)
  // optional string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.MkdirOutput.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  // optional uint32 err = 2;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.MkdirOutput)
  return target;
}

int MkdirOutput::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.MkdirOutput)
  int total_size = 0;

  // optional string str = 1;
  if (this->str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());
  }

  // optional uint32 err = 2;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->err());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MkdirOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.MkdirOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MkdirOutput* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MkdirOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.MkdirOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.MkdirOutput)
    MergeFrom(*source);
  }
}

void MkdirOutput::MergeFrom(const MkdirOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.MkdirOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.str().size() > 0) {

    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void MkdirOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.MkdirOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MkdirOutput::CopyFrom(const MkdirOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.MkdirOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MkdirOutput::IsInitialized() const {

  return true;
}

void MkdirOutput::Swap(MkdirOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MkdirOutput::InternalSwap(MkdirOutput* other) {
  str_.Swap(&other->str_);
  std::swap(err_, other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MkdirOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MkdirOutput_descriptor_;
  metadata.reflection = MkdirOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MkdirOutput

// optional string str = 1;
void MkdirOutput::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MkdirOutput::str() const {
  // @@protoc_insertion_point(field_get:nfsfuse.MkdirOutput.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MkdirOutput::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.MkdirOutput.str)
}
 void MkdirOutput::set_str(const char* value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.MkdirOutput.str)
}
 void MkdirOutput::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.MkdirOutput.str)
}
 ::std::string* MkdirOutput::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.MkdirOutput.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MkdirOutput::release_str() {
  // @@protoc_insertion_point(field_release:nfsfuse.MkdirOutput.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MkdirOutput::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.MkdirOutput.str)
}

// optional uint32 err = 2;
void MkdirOutput::clear_err() {
  err_ = 0u;
}
 ::google::protobuf::uint32 MkdirOutput::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.MkdirOutput.err)
  return err_;
}
 void MkdirOutput::set_err(::google::protobuf::uint32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.MkdirOutput.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace nfsfuse

// @@protoc_insertion_point(global_scope)
