// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nfsfuse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "nfsfuse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace nfsfuse {

namespace {

const ::google::protobuf::Descriptor* SerializeByte_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SerializeByte_reflection_ = NULL;
const ::google::protobuf::Descriptor* String_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  String_reflection_ = NULL;
const ::google::protobuf::Descriptor* Dirent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Dirent_reflection_ = NULL;
const ::google::protobuf::Descriptor* Stat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Stat_reflection_ = NULL;
const ::google::protobuf::Descriptor* FuseFileInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FuseFileInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReadResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReadRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* WriteRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WriteRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* WriteResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WriteResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* MkdirRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MkdirRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* OutputInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OutputInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RenameRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RenameRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UtimensRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UtimensRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MknodRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MknodRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* Errno_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Errno_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_nfsfuse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_nfsfuse_2eproto() {
  protobuf_AddDesc_nfsfuse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "nfsfuse.proto");
  GOOGLE_CHECK(file != NULL);
  SerializeByte_descriptor_ = file->message_type(0);
  static const int SerializeByte_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SerializeByte, buffer_),
  };
  SerializeByte_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SerializeByte_descriptor_,
      SerializeByte::default_instance_,
      SerializeByte_offsets_,
      -1,
      -1,
      -1,
      sizeof(SerializeByte),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SerializeByte, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SerializeByte, _is_default_instance_));
  String_descriptor_ = file->message_type(1);
  static const int String_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(String, str_),
  };
  String_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      String_descriptor_,
      String::default_instance_,
      String_offsets_,
      -1,
      -1,
      -1,
      sizeof(String),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(String, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(String, _is_default_instance_));
  Dirent_descriptor_ = file->message_type(2);
  static const int Dirent_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dirent, dino_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dirent, dname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dirent, dtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dirent, err_),
  };
  Dirent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Dirent_descriptor_,
      Dirent::default_instance_,
      Dirent_offsets_,
      -1,
      -1,
      -1,
      sizeof(Dirent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dirent, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dirent, _is_default_instance_));
  Stat_descriptor_ = file->message_type(3);
  static const int Stat_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, dev_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, ino_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, nlink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, gid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, blksize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, blocks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, atime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, mtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, ctime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, err_),
  };
  Stat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Stat_descriptor_,
      Stat::default_instance_,
      Stat_offsets_,
      -1,
      -1,
      -1,
      sizeof(Stat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stat, _is_default_instance_));
  FuseFileInfo_descriptor_ = file->message_type(4);
  static const int FuseFileInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, flags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, fh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, oldfh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, lockowner_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, pollevent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, path_),
  };
  FuseFileInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FuseFileInfo_descriptor_,
      FuseFileInfo::default_instance_,
      FuseFileInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(FuseFileInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuseFileInfo, _is_default_instance_));
  ReadResult_descriptor_ = file->message_type(5);
  static const int ReadResult_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResult, bytesread_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResult, buffer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResult, err_),
  };
  ReadResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadResult_descriptor_,
      ReadResult::default_instance_,
      ReadResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReadResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResult, _is_default_instance_));
  ReadRequest_descriptor_ = file->message_type(6);
  static const int ReadRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, offset_),
  };
  ReadRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadRequest_descriptor_,
      ReadRequest::default_instance_,
      ReadRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReadRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, _is_default_instance_));
  WriteRequest_descriptor_ = file->message_type(7);
  static const int WriteRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, buffer_),
  };
  WriteRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WriteRequest_descriptor_,
      WriteRequest::default_instance_,
      WriteRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(WriteRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, _is_default_instance_));
  WriteResult_descriptor_ = file->message_type(8);
  static const int WriteResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteResult, nbytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteResult, err_),
  };
  WriteResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WriteResult_descriptor_,
      WriteResult::default_instance_,
      WriteResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(WriteResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteResult, _is_default_instance_));
  CreateRequest_descriptor_ = file->message_type(9);
  static const int CreateRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequest, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequest, mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequest, flags_),
  };
  CreateRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateRequest_descriptor_,
      CreateRequest::default_instance_,
      CreateRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequest, _is_default_instance_));
  CreateResult_descriptor_ = file->message_type(10);
  static const int CreateResult_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateResult, flags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateResult, fh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateResult, oldfh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateResult, lockowner_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateResult, pollevent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateResult, err_),
  };
  CreateResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateResult_descriptor_,
      CreateResult::default_instance_,
      CreateResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateResult, _is_default_instance_));
  MkdirRequest_descriptor_ = file->message_type(11);
  static const int MkdirRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirRequest, s_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirRequest, mode_),
  };
  MkdirRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MkdirRequest_descriptor_,
      MkdirRequest::default_instance_,
      MkdirRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(MkdirRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirRequest, _is_default_instance_));
  OutputInfo_descriptor_ = file->message_type(12);
  static const int OutputInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutputInfo, str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutputInfo, err_),
  };
  OutputInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OutputInfo_descriptor_,
      OutputInfo::default_instance_,
      OutputInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(OutputInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutputInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutputInfo, _is_default_instance_));
  RenameRequest_descriptor_ = file->message_type(13);
  static const int RenameRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameRequest, fp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameRequest, tp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameRequest, flag_),
  };
  RenameRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RenameRequest_descriptor_,
      RenameRequest::default_instance_,
      RenameRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(RenameRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameRequest, _is_default_instance_));
  UtimensRequest_descriptor_ = file->message_type(14);
  static const int UtimensRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtimensRequest, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtimensRequest, sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtimensRequest, nsec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtimensRequest, sec2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtimensRequest, nsec2_),
  };
  UtimensRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UtimensRequest_descriptor_,
      UtimensRequest::default_instance_,
      UtimensRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(UtimensRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtimensRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtimensRequest, _is_default_instance_));
  MknodRequest_descriptor_ = file->message_type(15);
  static const int MknodRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MknodRequest, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MknodRequest, mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MknodRequest, rdev_),
  };
  MknodRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MknodRequest_descriptor_,
      MknodRequest::default_instance_,
      MknodRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(MknodRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MknodRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MknodRequest, _is_default_instance_));
  FileDesc_descriptor_ = file->message_type(16);
  static const int FileDesc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDesc, fh_),
  };
  FileDesc_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FileDesc_descriptor_,
      FileDesc::default_instance_,
      FileDesc_offsets_,
      -1,
      -1,
      -1,
      sizeof(FileDesc),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDesc, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDesc, _is_default_instance_));
  Errno_descriptor_ = file->message_type(17);
  static const int Errno_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Errno, err_),
  };
  Errno_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Errno_descriptor_,
      Errno::default_instance_,
      Errno_offsets_,
      -1,
      -1,
      -1,
      sizeof(Errno),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Errno, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Errno, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_nfsfuse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SerializeByte_descriptor_, &SerializeByte::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      String_descriptor_, &String::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Dirent_descriptor_, &Dirent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Stat_descriptor_, &Stat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FuseFileInfo_descriptor_, &FuseFileInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadResult_descriptor_, &ReadResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadRequest_descriptor_, &ReadRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WriteRequest_descriptor_, &WriteRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WriteResult_descriptor_, &WriteResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateRequest_descriptor_, &CreateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateResult_descriptor_, &CreateResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MkdirRequest_descriptor_, &MkdirRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OutputInfo_descriptor_, &OutputInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RenameRequest_descriptor_, &RenameRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UtimensRequest_descriptor_, &UtimensRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MknodRequest_descriptor_, &MknodRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FileDesc_descriptor_, &FileDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Errno_descriptor_, &Errno::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_nfsfuse_2eproto() {
  delete SerializeByte::default_instance_;
  delete SerializeByte_reflection_;
  delete String::default_instance_;
  delete String_reflection_;
  delete Dirent::default_instance_;
  delete Dirent_reflection_;
  delete Stat::default_instance_;
  delete Stat_reflection_;
  delete FuseFileInfo::default_instance_;
  delete FuseFileInfo_reflection_;
  delete ReadResult::default_instance_;
  delete ReadResult_reflection_;
  delete ReadRequest::default_instance_;
  delete ReadRequest_reflection_;
  delete WriteRequest::default_instance_;
  delete WriteRequest_reflection_;
  delete WriteResult::default_instance_;
  delete WriteResult_reflection_;
  delete CreateRequest::default_instance_;
  delete CreateRequest_reflection_;
  delete CreateResult::default_instance_;
  delete CreateResult_reflection_;
  delete MkdirRequest::default_instance_;
  delete MkdirRequest_reflection_;
  delete OutputInfo::default_instance_;
  delete OutputInfo_reflection_;
  delete RenameRequest::default_instance_;
  delete RenameRequest_reflection_;
  delete UtimensRequest::default_instance_;
  delete UtimensRequest_reflection_;
  delete MknodRequest::default_instance_;
  delete MknodRequest_reflection_;
  delete FileDesc::default_instance_;
  delete FileDesc_reflection_;
  delete Errno::default_instance_;
  delete Errno_reflection_;
}

void protobuf_AddDesc_nfsfuse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_nfsfuse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rnfsfuse.proto\022\007nfsfuse\"\037\n\rSerializeByt"
    "e\022\016\n\006buffer\030\001 \001(\014\"\025\n\006String\022\013\n\003str\030\001 \001(\t"
    "\"A\n\006Dirent\022\014\n\004dino\030\001 \001(\r\022\r\n\005dname\030\002 \001(\t\022"
    "\r\n\005dtype\030\003 \001(\r\022\013\n\003err\030\004 \001(\005\"\300\001\n\004Stat\022\013\n\003"
    "dev\030\001 \001(\r\022\013\n\003ino\030\002 \001(\r\022\014\n\004mode\030\003 \001(\005\022\r\n\005"
    "nlink\030\004 \001(\r\022\013\n\003uid\030\005 \001(\r\022\013\n\003gid\030\006 \001(\r\022\014\n"
    "\004size\030\007 \001(\022\022\017\n\007blksize\030\010 \001(\022\022\016\n\006blocks\030\t"
    " \001(\022\022\r\n\005atime\030\n \001(\005\022\r\n\005mtime\030\013 \001(\005\022\r\n\005ct"
    "ime\030\014 \001(\005\022\013\n\003err\030\r \001(\005\"y\n\014FuseFileInfo\022\r"
    "\n\005flags\030\001 \001(\005\022\n\n\002fh\030\002 \001(\005\022\r\n\005oldfh\030\003 \001(\r"
    "\022\021\n\tlockowner\030\005 \001(\004\022\021\n\tpollevent\030\006 \001(\r\022\013"
    "\n\003err\030\004 \001(\005\022\014\n\004path\030\007 \001(\t\"<\n\nReadResult\022"
    "\021\n\tbytesread\030\001 \001(\005\022\016\n\006buffer\030\002 \001(\014\022\013\n\003er"
    "r\030\003 \001(\005\"9\n\013ReadRequest\022\014\n\004path\030\001 \001(\t\022\014\n\004"
    "size\030\002 \001(\r\022\016\n\006offset\030\003 \001(\003\"J\n\014WriteReque"
    "st\022\014\n\004path\030\001 \001(\t\022\014\n\004size\030\002 \001(\r\022\016\n\006offset"
    "\030\003 \001(\005\022\016\n\006buffer\030\004 \001(\014\"*\n\013WriteResult\022\016\n"
    "\006nbytes\030\001 \001(\005\022\013\n\003err\030\002 \001(\005\":\n\rCreateRequ"
    "est\022\014\n\004path\030\001 \001(\t\022\014\n\004mode\030\002 \001(\005\022\r\n\005flags"
    "\030\003 \001(\005\"k\n\014CreateResult\022\r\n\005flags\030\001 \001(\005\022\n\n"
    "\002fh\030\002 \001(\005\022\r\n\005oldfh\030\003 \001(\r\022\021\n\tlockowner\030\005 "
    "\001(\004\022\021\n\tpollevent\030\006 \001(\r\022\013\n\003err\030\007 \001(\005\"\'\n\014M"
    "kdirRequest\022\t\n\001s\030\001 \001(\t\022\014\n\004mode\030\002 \001(\005\"&\n\n"
    "OutputInfo\022\013\n\003str\030\001 \001(\t\022\013\n\003err\030\002 \001(\005\"5\n\r"
    "RenameRequest\022\n\n\002fp\030\001 \001(\t\022\n\n\002tp\030\002 \001(\t\022\014\n"
    "\004flag\030\003 \001(\r\"V\n\016UtimensRequest\022\014\n\004path\030\001 "
    "\001(\t\022\013\n\003sec\030\002 \001(\005\022\014\n\004nsec\030\003 \001(\003\022\014\n\004sec2\030\004"
    " \001(\005\022\r\n\005nsec2\030\005 \001(\003\"8\n\014MknodRequest\022\014\n\004p"
    "ath\030\001 \001(\t\022\014\n\004mode\030\002 \001(\005\022\014\n\004rdev\030\003 \001(\r\"\026\n"
    "\010FileDesc\022\n\n\002fh\030\001 \001(\005\"\024\n\005Errno\022\013\n\003err\030\001 "
    "\001(\0052\326\006\n\003NFS\0223\n\017nfsfuse_getattr\022\017.nfsfuse"
    ".String\032\r.nfsfuse.Stat\"\000\0227\n\017nfsfuse_read"
    "dir\022\017.nfsfuse.String\032\017.nfsfuse.Dirent\"\0000"
    "\001\022>\n\014nfsfuse_open\022\025.nfsfuse.FuseFileInfo"
    "\032\025.nfsfuse.FuseFileInfo\"\000\022;\n\014nfsfuse_rea"
    "d\022\024.nfsfuse.ReadRequest\032\023.nfsfuse.ReadRe"
    "sult\"\000\022>\n\rnfsfuse_write\022\025.nfsfuse.WriteR"
    "equest\032\024.nfsfuse.WriteResult\"\000\022A\n\016nfsfus"
    "e_create\022\026.nfsfuse.CreateRequest\032\025.nfsfu"
    "se.CreateResult\"\000\022=\n\rnfsfuse_mkdir\022\025.nfs"
    "fuse.MkdirRequest\032\023.nfsfuse.OutputInfo\"\000"
    "\0227\n\rnfsfuse_rmdir\022\017.nfsfuse.String\032\023.nfs"
    "fuse.OutputInfo\"\000\0228\n\016nfsfuse_unlink\022\017.nf"
    "sfuse.String\032\023.nfsfuse.OutputInfo\"\000\022\?\n\016n"
    "fsfuse_rename\022\026.nfsfuse.RenameRequest\032\023."
    "nfsfuse.OutputInfo\"\000\022A\n\017nfsfuse_utimens\022"
    "\027.nfsfuse.UtimensRequest\032\023.nfsfuse.Outpu"
    "tInfo\"\000\022=\n\rnfsfuse_mknod\022\025.nfsfuse.Mknod"
    "Request\032\023.nfsfuse.OutputInfo\"\000\0226\n\017nfsfus"
    "e_release\022\021.nfsfuse.FileDesc\032\016.nfsfuse.E"
    "rrno\"\000\0224\n\rnfsfuse_flush\022\021.nfsfuse.FileDe"
    "sc\032\016.nfsfuse.Errno\"\000b\006proto3", 2068);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "nfsfuse.proto", &protobuf_RegisterTypes);
  SerializeByte::default_instance_ = new SerializeByte();
  String::default_instance_ = new String();
  Dirent::default_instance_ = new Dirent();
  Stat::default_instance_ = new Stat();
  FuseFileInfo::default_instance_ = new FuseFileInfo();
  ReadResult::default_instance_ = new ReadResult();
  ReadRequest::default_instance_ = new ReadRequest();
  WriteRequest::default_instance_ = new WriteRequest();
  WriteResult::default_instance_ = new WriteResult();
  CreateRequest::default_instance_ = new CreateRequest();
  CreateResult::default_instance_ = new CreateResult();
  MkdirRequest::default_instance_ = new MkdirRequest();
  OutputInfo::default_instance_ = new OutputInfo();
  RenameRequest::default_instance_ = new RenameRequest();
  UtimensRequest::default_instance_ = new UtimensRequest();
  MknodRequest::default_instance_ = new MknodRequest();
  FileDesc::default_instance_ = new FileDesc();
  Errno::default_instance_ = new Errno();
  SerializeByte::default_instance_->InitAsDefaultInstance();
  String::default_instance_->InitAsDefaultInstance();
  Dirent::default_instance_->InitAsDefaultInstance();
  Stat::default_instance_->InitAsDefaultInstance();
  FuseFileInfo::default_instance_->InitAsDefaultInstance();
  ReadResult::default_instance_->InitAsDefaultInstance();
  ReadRequest::default_instance_->InitAsDefaultInstance();
  WriteRequest::default_instance_->InitAsDefaultInstance();
  WriteResult::default_instance_->InitAsDefaultInstance();
  CreateRequest::default_instance_->InitAsDefaultInstance();
  CreateResult::default_instance_->InitAsDefaultInstance();
  MkdirRequest::default_instance_->InitAsDefaultInstance();
  OutputInfo::default_instance_->InitAsDefaultInstance();
  RenameRequest::default_instance_->InitAsDefaultInstance();
  UtimensRequest::default_instance_->InitAsDefaultInstance();
  MknodRequest::default_instance_->InitAsDefaultInstance();
  FileDesc::default_instance_->InitAsDefaultInstance();
  Errno::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_nfsfuse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_nfsfuse_2eproto {
  StaticDescriptorInitializer_nfsfuse_2eproto() {
    protobuf_AddDesc_nfsfuse_2eproto();
  }
} static_descriptor_initializer_nfsfuse_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializeByte::kBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializeByte::SerializeByte()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.SerializeByte)
}

void SerializeByte::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SerializeByte::SerializeByte(const SerializeByte& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.SerializeByte)
}

void SerializeByte::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SerializeByte::~SerializeByte() {
  // @@protoc_insertion_point(destructor:nfsfuse.SerializeByte)
  SharedDtor();
}

void SerializeByte::SharedDtor() {
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SerializeByte::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SerializeByte::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SerializeByte_descriptor_;
}

const SerializeByte& SerializeByte::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

SerializeByte* SerializeByte::default_instance_ = NULL;

SerializeByte* SerializeByte::New(::google::protobuf::Arena* arena) const {
  SerializeByte* n = new SerializeByte;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SerializeByte::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.SerializeByte)
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SerializeByte::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.SerializeByte)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes buffer = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.SerializeByte)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.SerializeByte)
  return false;
#undef DO_
}

void SerializeByte::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.SerializeByte)
  // optional bytes buffer = 1;
  if (this->buffer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->buffer(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.SerializeByte)
}

::google::protobuf::uint8* SerializeByte::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.SerializeByte)
  // optional bytes buffer = 1;
  if (this->buffer().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->buffer(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.SerializeByte)
  return target;
}

int SerializeByte::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.SerializeByte)
  int total_size = 0;

  // optional bytes buffer = 1;
  if (this->buffer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buffer());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SerializeByte::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.SerializeByte)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SerializeByte* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializeByte>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.SerializeByte)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.SerializeByte)
    MergeFrom(*source);
  }
}

void SerializeByte::MergeFrom(const SerializeByte& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.SerializeByte)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.buffer().size() > 0) {

    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
}

void SerializeByte::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.SerializeByte)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializeByte::CopyFrom(const SerializeByte& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.SerializeByte)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializeByte::IsInitialized() const {

  return true;
}

void SerializeByte::Swap(SerializeByte* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializeByte::InternalSwap(SerializeByte* other) {
  buffer_.Swap(&other->buffer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SerializeByte::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SerializeByte_descriptor_;
  metadata.reflection = SerializeByte_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SerializeByte

// optional bytes buffer = 1;
void SerializeByte::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SerializeByte::buffer() const {
  // @@protoc_insertion_point(field_get:nfsfuse.SerializeByte.buffer)
  return buffer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SerializeByte::set_buffer(const ::std::string& value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.SerializeByte.buffer)
}
 void SerializeByte::set_buffer(const char* value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.SerializeByte.buffer)
}
 void SerializeByte::set_buffer(const void* value, size_t size) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.SerializeByte.buffer)
}
 ::std::string* SerializeByte::mutable_buffer() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.SerializeByte.buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SerializeByte::release_buffer() {
  // @@protoc_insertion_point(field_release:nfsfuse.SerializeByte.buffer)
  
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SerializeByte::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    
  } else {
    
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.SerializeByte.buffer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int String::kStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

String::String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.String)
}

void String::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

String::String(const String& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.String)
}

void String::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

String::~String() {
  // @@protoc_insertion_point(destructor:nfsfuse.String)
  SharedDtor();
}

void String::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void String::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* String::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return String_descriptor_;
}

const String& String::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

String* String::default_instance_ = NULL;

String* String::New(::google::protobuf::Arena* arena) const {
  String* n = new String;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void String::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.String)
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.String)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string str = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.String.str"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.String)
  return false;
#undef DO_
}

void String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.String)
  // optional string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.String.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->str(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.String)
}

::google::protobuf::uint8* String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.String)
  // optional string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.String.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.String)
  return target;
}

int String::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.String)
  int total_size = 0;

  // optional string str = 1;
  if (this->str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.String)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const String* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.String)
    MergeFrom(*source);
  }
}

void String::MergeFrom(const String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.String)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.str().size() > 0) {

    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
}

void String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void String::CopyFrom(const String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool String::IsInitialized() const {

  return true;
}

void String::Swap(String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void String::InternalSwap(String* other) {
  str_.Swap(&other->str_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata String::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = String_descriptor_;
  metadata.reflection = String_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// String

// optional string str = 1;
void String::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& String::str() const {
  // @@protoc_insertion_point(field_get:nfsfuse.String.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void String::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.String.str)
}
 void String::set_str(const char* value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.String.str)
}
 void String::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.String.str)
}
 ::std::string* String::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.String.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* String::release_str() {
  // @@protoc_insertion_point(field_release:nfsfuse.String.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void String::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.String.str)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dirent::kDinoFieldNumber;
const int Dirent::kDnameFieldNumber;
const int Dirent::kDtypeFieldNumber;
const int Dirent::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dirent::Dirent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.Dirent)
}

void Dirent::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Dirent::Dirent(const Dirent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.Dirent)
}

void Dirent::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dino_ = 0u;
  dname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dtype_ = 0u;
  err_ = 0;
}

Dirent::~Dirent() {
  // @@protoc_insertion_point(destructor:nfsfuse.Dirent)
  SharedDtor();
}

void Dirent::SharedDtor() {
  dname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Dirent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Dirent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Dirent_descriptor_;
}

const Dirent& Dirent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

Dirent* Dirent::default_instance_ = NULL;

Dirent* Dirent::New(::google::protobuf::Arena* arena) const {
  Dirent* n = new Dirent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Dirent::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.Dirent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Dirent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Dirent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(dino_, err_);
  dname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Dirent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.Dirent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 dino = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dino_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dname;
        break;
      }

      // optional string dname = 2;
      case 2: {
        if (tag == 18) {
         parse_dname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dname().data(), this->dname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.Dirent.dname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dtype;
        break;
      }

      // optional uint32 dtype = 3;
      case 3: {
        if (tag == 24) {
         parse_dtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_err;
        break;
      }

      // optional int32 err = 4;
      case 4: {
        if (tag == 32) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.Dirent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.Dirent)
  return false;
#undef DO_
}

void Dirent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.Dirent)
  // optional uint32 dino = 1;
  if (this->dino() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dino(), output);
  }

  // optional string dname = 2;
  if (this->dname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dname().data(), this->dname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.Dirent.dname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dname(), output);
  }

  // optional uint32 dtype = 3;
  if (this->dtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dtype(), output);
  }

  // optional int32 err = 4;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.Dirent)
}

::google::protobuf::uint8* Dirent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.Dirent)
  // optional uint32 dino = 1;
  if (this->dino() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dino(), target);
  }

  // optional string dname = 2;
  if (this->dname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dname().data(), this->dname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.Dirent.dname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dname(), target);
  }

  // optional uint32 dtype = 3;
  if (this->dtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dtype(), target);
  }

  // optional int32 err = 4;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.Dirent)
  return target;
}

int Dirent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.Dirent)
  int total_size = 0;

  // optional uint32 dino = 1;
  if (this->dino() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dino());
  }

  // optional string dname = 2;
  if (this->dname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dname());
  }

  // optional uint32 dtype = 3;
  if (this->dtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dtype());
  }

  // optional int32 err = 4;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Dirent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.Dirent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Dirent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Dirent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.Dirent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.Dirent)
    MergeFrom(*source);
  }
}

void Dirent::MergeFrom(const Dirent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.Dirent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.dino() != 0) {
    set_dino(from.dino());
  }
  if (from.dname().size() > 0) {

    dname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dname_);
  }
  if (from.dtype() != 0) {
    set_dtype(from.dtype());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void Dirent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.Dirent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dirent::CopyFrom(const Dirent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.Dirent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dirent::IsInitialized() const {

  return true;
}

void Dirent::Swap(Dirent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dirent::InternalSwap(Dirent* other) {
  std::swap(dino_, other->dino_);
  dname_.Swap(&other->dname_);
  std::swap(dtype_, other->dtype_);
  std::swap(err_, other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Dirent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Dirent_descriptor_;
  metadata.reflection = Dirent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Dirent

// optional uint32 dino = 1;
void Dirent::clear_dino() {
  dino_ = 0u;
}
 ::google::protobuf::uint32 Dirent::dino() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Dirent.dino)
  return dino_;
}
 void Dirent::set_dino(::google::protobuf::uint32 value) {
  
  dino_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Dirent.dino)
}

// optional string dname = 2;
void Dirent::clear_dname() {
  dname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Dirent::dname() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Dirent.dname)
  return dname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Dirent::set_dname(const ::std::string& value) {
  
  dname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.Dirent.dname)
}
 void Dirent::set_dname(const char* value) {
  
  dname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.Dirent.dname)
}
 void Dirent::set_dname(const char* value, size_t size) {
  
  dname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.Dirent.dname)
}
 ::std::string* Dirent::mutable_dname() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.Dirent.dname)
  return dname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Dirent::release_dname() {
  // @@protoc_insertion_point(field_release:nfsfuse.Dirent.dname)
  
  return dname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Dirent::set_allocated_dname(::std::string* dname) {
  if (dname != NULL) {
    
  } else {
    
  }
  dname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dname);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.Dirent.dname)
}

// optional uint32 dtype = 3;
void Dirent::clear_dtype() {
  dtype_ = 0u;
}
 ::google::protobuf::uint32 Dirent::dtype() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Dirent.dtype)
  return dtype_;
}
 void Dirent::set_dtype(::google::protobuf::uint32 value) {
  
  dtype_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Dirent.dtype)
}

// optional int32 err = 4;
void Dirent::clear_err() {
  err_ = 0;
}
 ::google::protobuf::int32 Dirent::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Dirent.err)
  return err_;
}
 void Dirent::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Dirent.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stat::kDevFieldNumber;
const int Stat::kInoFieldNumber;
const int Stat::kModeFieldNumber;
const int Stat::kNlinkFieldNumber;
const int Stat::kUidFieldNumber;
const int Stat::kGidFieldNumber;
const int Stat::kSizeFieldNumber;
const int Stat::kBlksizeFieldNumber;
const int Stat::kBlocksFieldNumber;
const int Stat::kAtimeFieldNumber;
const int Stat::kMtimeFieldNumber;
const int Stat::kCtimeFieldNumber;
const int Stat::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stat::Stat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.Stat)
}

void Stat::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Stat::Stat(const Stat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.Stat)
}

void Stat::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  dev_ = 0u;
  ino_ = 0u;
  mode_ = 0;
  nlink_ = 0u;
  uid_ = 0u;
  gid_ = 0u;
  size_ = GOOGLE_LONGLONG(0);
  blksize_ = GOOGLE_LONGLONG(0);
  blocks_ = GOOGLE_LONGLONG(0);
  atime_ = 0;
  mtime_ = 0;
  ctime_ = 0;
  err_ = 0;
}

Stat::~Stat() {
  // @@protoc_insertion_point(destructor:nfsfuse.Stat)
  SharedDtor();
}

void Stat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Stat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Stat_descriptor_;
}

const Stat& Stat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

Stat* Stat::default_instance_ = NULL;

Stat* Stat::New(::google::protobuf::Arena* arena) const {
  Stat* n = new Stat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stat::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.Stat)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Stat, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Stat*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(dev_, blksize_);
  ZR_(blocks_, err_);

#undef ZR_HELPER_
#undef ZR_

}

bool Stat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.Stat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 dev = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dev_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ino;
        break;
      }

      // optional uint32 ino = 2;
      case 2: {
        if (tag == 16) {
         parse_ino:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ino_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mode;
        break;
      }

      // optional int32 mode = 3;
      case 3: {
        if (tag == 24) {
         parse_mode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_nlink;
        break;
      }

      // optional uint32 nlink = 4;
      case 4: {
        if (tag == 32) {
         parse_nlink:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nlink_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_uid;
        break;
      }

      // optional uint32 uid = 5;
      case 5: {
        if (tag == 40) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_gid;
        break;
      }

      // optional uint32 gid = 6;
      case 6: {
        if (tag == 48) {
         parse_gid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_size;
        break;
      }

      // optional sint64 size = 7;
      case 7: {
        if (tag == 56) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_blksize;
        break;
      }

      // optional sint64 blksize = 8;
      case 8: {
        if (tag == 64) {
         parse_blksize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &blksize_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_blocks;
        break;
      }

      // optional sint64 blocks = 9;
      case 9: {
        if (tag == 72) {
         parse_blocks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &blocks_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_atime;
        break;
      }

      // optional int32 atime = 10;
      case 10: {
        if (tag == 80) {
         parse_atime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &atime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_mtime;
        break;
      }

      // optional int32 mtime = 11;
      case 11: {
        if (tag == 88) {
         parse_mtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_ctime;
        break;
      }

      // optional int32 ctime = 12;
      case 12: {
        if (tag == 96) {
         parse_ctime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ctime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_err;
        break;
      }

      // optional int32 err = 13;
      case 13: {
        if (tag == 104) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.Stat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.Stat)
  return false;
#undef DO_
}

void Stat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.Stat)
  // optional uint32 dev = 1;
  if (this->dev() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dev(), output);
  }

  // optional uint32 ino = 2;
  if (this->ino() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ino(), output);
  }

  // optional int32 mode = 3;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mode(), output);
  }

  // optional uint32 nlink = 4;
  if (this->nlink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->nlink(), output);
  }

  // optional uint32 uid = 5;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uid(), output);
  }

  // optional uint32 gid = 6;
  if (this->gid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->gid(), output);
  }

  // optional sint64 size = 7;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(7, this->size(), output);
  }

  // optional sint64 blksize = 8;
  if (this->blksize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(8, this->blksize(), output);
  }

  // optional sint64 blocks = 9;
  if (this->blocks() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(9, this->blocks(), output);
  }

  // optional int32 atime = 10;
  if (this->atime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->atime(), output);
  }

  // optional int32 mtime = 11;
  if (this->mtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->mtime(), output);
  }

  // optional int32 ctime = 12;
  if (this->ctime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->ctime(), output);
  }

  // optional int32 err = 13;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.Stat)
}

::google::protobuf::uint8* Stat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.Stat)
  // optional uint32 dev = 1;
  if (this->dev() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dev(), target);
  }

  // optional uint32 ino = 2;
  if (this->ino() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ino(), target);
  }

  // optional int32 mode = 3;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mode(), target);
  }

  // optional uint32 nlink = 4;
  if (this->nlink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->nlink(), target);
  }

  // optional uint32 uid = 5;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uid(), target);
  }

  // optional uint32 gid = 6;
  if (this->gid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->gid(), target);
  }

  // optional sint64 size = 7;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(7, this->size(), target);
  }

  // optional sint64 blksize = 8;
  if (this->blksize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(8, this->blksize(), target);
  }

  // optional sint64 blocks = 9;
  if (this->blocks() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(9, this->blocks(), target);
  }

  // optional int32 atime = 10;
  if (this->atime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->atime(), target);
  }

  // optional int32 mtime = 11;
  if (this->mtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->mtime(), target);
  }

  // optional int32 ctime = 12;
  if (this->ctime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->ctime(), target);
  }

  // optional int32 err = 13;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.Stat)
  return target;
}

int Stat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.Stat)
  int total_size = 0;

  // optional uint32 dev = 1;
  if (this->dev() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dev());
  }

  // optional uint32 ino = 2;
  if (this->ino() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ino());
  }

  // optional int32 mode = 3;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  // optional uint32 nlink = 4;
  if (this->nlink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nlink());
  }

  // optional uint32 uid = 5;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // optional uint32 gid = 6;
  if (this->gid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gid());
  }

  // optional sint64 size = 7;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->size());
  }

  // optional sint64 blksize = 8;
  if (this->blksize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->blksize());
  }

  // optional sint64 blocks = 9;
  if (this->blocks() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->blocks());
  }

  // optional int32 atime = 10;
  if (this->atime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->atime());
  }

  // optional int32 mtime = 11;
  if (this->mtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mtime());
  }

  // optional int32 ctime = 12;
  if (this->ctime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ctime());
  }

  // optional int32 err = 13;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.Stat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Stat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Stat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.Stat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.Stat)
    MergeFrom(*source);
  }
}

void Stat::MergeFrom(const Stat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.Stat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.dev() != 0) {
    set_dev(from.dev());
  }
  if (from.ino() != 0) {
    set_ino(from.ino());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.nlink() != 0) {
    set_nlink(from.nlink());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.gid() != 0) {
    set_gid(from.gid());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.blksize() != 0) {
    set_blksize(from.blksize());
  }
  if (from.blocks() != 0) {
    set_blocks(from.blocks());
  }
  if (from.atime() != 0) {
    set_atime(from.atime());
  }
  if (from.mtime() != 0) {
    set_mtime(from.mtime());
  }
  if (from.ctime() != 0) {
    set_ctime(from.ctime());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void Stat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stat::CopyFrom(const Stat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stat::IsInitialized() const {

  return true;
}

void Stat::Swap(Stat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stat::InternalSwap(Stat* other) {
  std::swap(dev_, other->dev_);
  std::swap(ino_, other->ino_);
  std::swap(mode_, other->mode_);
  std::swap(nlink_, other->nlink_);
  std::swap(uid_, other->uid_);
  std::swap(gid_, other->gid_);
  std::swap(size_, other->size_);
  std::swap(blksize_, other->blksize_);
  std::swap(blocks_, other->blocks_);
  std::swap(atime_, other->atime_);
  std::swap(mtime_, other->mtime_);
  std::swap(ctime_, other->ctime_);
  std::swap(err_, other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Stat_descriptor_;
  metadata.reflection = Stat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Stat

// optional uint32 dev = 1;
void Stat::clear_dev() {
  dev_ = 0u;
}
 ::google::protobuf::uint32 Stat::dev() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.dev)
  return dev_;
}
 void Stat::set_dev(::google::protobuf::uint32 value) {
  
  dev_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.dev)
}

// optional uint32 ino = 2;
void Stat::clear_ino() {
  ino_ = 0u;
}
 ::google::protobuf::uint32 Stat::ino() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.ino)
  return ino_;
}
 void Stat::set_ino(::google::protobuf::uint32 value) {
  
  ino_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.ino)
}

// optional int32 mode = 3;
void Stat::clear_mode() {
  mode_ = 0;
}
 ::google::protobuf::int32 Stat::mode() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.mode)
  return mode_;
}
 void Stat::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.mode)
}

// optional uint32 nlink = 4;
void Stat::clear_nlink() {
  nlink_ = 0u;
}
 ::google::protobuf::uint32 Stat::nlink() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.nlink)
  return nlink_;
}
 void Stat::set_nlink(::google::protobuf::uint32 value) {
  
  nlink_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.nlink)
}

// optional uint32 uid = 5;
void Stat::clear_uid() {
  uid_ = 0u;
}
 ::google::protobuf::uint32 Stat::uid() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.uid)
  return uid_;
}
 void Stat::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.uid)
}

// optional uint32 gid = 6;
void Stat::clear_gid() {
  gid_ = 0u;
}
 ::google::protobuf::uint32 Stat::gid() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.gid)
  return gid_;
}
 void Stat::set_gid(::google::protobuf::uint32 value) {
  
  gid_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.gid)
}

// optional sint64 size = 7;
void Stat::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Stat::size() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.size)
  return size_;
}
 void Stat::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.size)
}

// optional sint64 blksize = 8;
void Stat::clear_blksize() {
  blksize_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Stat::blksize() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.blksize)
  return blksize_;
}
 void Stat::set_blksize(::google::protobuf::int64 value) {
  
  blksize_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.blksize)
}

// optional sint64 blocks = 9;
void Stat::clear_blocks() {
  blocks_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Stat::blocks() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.blocks)
  return blocks_;
}
 void Stat::set_blocks(::google::protobuf::int64 value) {
  
  blocks_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.blocks)
}

// optional int32 atime = 10;
void Stat::clear_atime() {
  atime_ = 0;
}
 ::google::protobuf::int32 Stat::atime() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.atime)
  return atime_;
}
 void Stat::set_atime(::google::protobuf::int32 value) {
  
  atime_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.atime)
}

// optional int32 mtime = 11;
void Stat::clear_mtime() {
  mtime_ = 0;
}
 ::google::protobuf::int32 Stat::mtime() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.mtime)
  return mtime_;
}
 void Stat::set_mtime(::google::protobuf::int32 value) {
  
  mtime_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.mtime)
}

// optional int32 ctime = 12;
void Stat::clear_ctime() {
  ctime_ = 0;
}
 ::google::protobuf::int32 Stat::ctime() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.ctime)
  return ctime_;
}
 void Stat::set_ctime(::google::protobuf::int32 value) {
  
  ctime_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.ctime)
}

// optional int32 err = 13;
void Stat::clear_err() {
  err_ = 0;
}
 ::google::protobuf::int32 Stat::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.err)
  return err_;
}
 void Stat::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FuseFileInfo::kFlagsFieldNumber;
const int FuseFileInfo::kFhFieldNumber;
const int FuseFileInfo::kOldfhFieldNumber;
const int FuseFileInfo::kLockownerFieldNumber;
const int FuseFileInfo::kPolleventFieldNumber;
const int FuseFileInfo::kErrFieldNumber;
const int FuseFileInfo::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FuseFileInfo::FuseFileInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.FuseFileInfo)
}

void FuseFileInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FuseFileInfo::FuseFileInfo(const FuseFileInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.FuseFileInfo)
}

void FuseFileInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  flags_ = 0;
  fh_ = 0;
  oldfh_ = 0u;
  lockowner_ = GOOGLE_ULONGLONG(0);
  pollevent_ = 0u;
  err_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FuseFileInfo::~FuseFileInfo() {
  // @@protoc_insertion_point(destructor:nfsfuse.FuseFileInfo)
  SharedDtor();
}

void FuseFileInfo::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FuseFileInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FuseFileInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FuseFileInfo_descriptor_;
}

const FuseFileInfo& FuseFileInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

FuseFileInfo* FuseFileInfo::default_instance_ = NULL;

FuseFileInfo* FuseFileInfo::New(::google::protobuf::Arena* arena) const {
  FuseFileInfo* n = new FuseFileInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FuseFileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.FuseFileInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FuseFileInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FuseFileInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(flags_, pollevent_);
  err_ = 0;
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool FuseFileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.FuseFileInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flags = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_fh;
        break;
      }

      // optional int32 fh = 2;
      case 2: {
        if (tag == 16) {
         parse_fh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_oldfh;
        break;
      }

      // optional uint32 oldfh = 3;
      case 3: {
        if (tag == 24) {
         parse_oldfh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oldfh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_err;
        break;
      }

      // optional int32 err = 4;
      case 4: {
        if (tag == 32) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_lockowner;
        break;
      }

      // optional uint64 lockowner = 5;
      case 5: {
        if (tag == 40) {
         parse_lockowner:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lockowner_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_pollevent;
        break;
      }

      // optional uint32 pollevent = 6;
      case 6: {
        if (tag == 48) {
         parse_pollevent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pollevent_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_path;
        break;
      }

      // optional string path = 7;
      case 7: {
        if (tag == 58) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.FuseFileInfo.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.FuseFileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.FuseFileInfo)
  return false;
#undef DO_
}

void FuseFileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.FuseFileInfo)
  // optional int32 flags = 1;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flags(), output);
  }

  // optional int32 fh = 2;
  if (this->fh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fh(), output);
  }

  // optional uint32 oldfh = 3;
  if (this->oldfh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->oldfh(), output);
  }

  // optional int32 err = 4;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->err(), output);
  }

  // optional uint64 lockowner = 5;
  if (this->lockowner() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->lockowner(), output);
  }

  // optional uint32 pollevent = 6;
  if (this->pollevent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pollevent(), output);
  }

  // optional string path = 7;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.FuseFileInfo.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->path(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.FuseFileInfo)
}

::google::protobuf::uint8* FuseFileInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.FuseFileInfo)
  // optional int32 flags = 1;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flags(), target);
  }

  // optional int32 fh = 2;
  if (this->fh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fh(), target);
  }

  // optional uint32 oldfh = 3;
  if (this->oldfh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->oldfh(), target);
  }

  // optional int32 err = 4;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->err(), target);
  }

  // optional uint64 lockowner = 5;
  if (this->lockowner() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->lockowner(), target);
  }

  // optional uint32 pollevent = 6;
  if (this->pollevent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pollevent(), target);
  }

  // optional string path = 7;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.FuseFileInfo.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->path(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.FuseFileInfo)
  return target;
}

int FuseFileInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.FuseFileInfo)
  int total_size = 0;

  // optional int32 flags = 1;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flags());
  }

  // optional int32 fh = 2;
  if (this->fh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fh());
  }

  // optional uint32 oldfh = 3;
  if (this->oldfh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->oldfh());
  }

  // optional uint64 lockowner = 5;
  if (this->lockowner() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lockowner());
  }

  // optional uint32 pollevent = 6;
  if (this->pollevent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pollevent());
  }

  // optional int32 err = 4;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  // optional string path = 7;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FuseFileInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.FuseFileInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FuseFileInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FuseFileInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.FuseFileInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.FuseFileInfo)
    MergeFrom(*source);
  }
}

void FuseFileInfo::MergeFrom(const FuseFileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.FuseFileInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
  if (from.fh() != 0) {
    set_fh(from.fh());
  }
  if (from.oldfh() != 0) {
    set_oldfh(from.oldfh());
  }
  if (from.lockowner() != 0) {
    set_lockowner(from.lockowner());
  }
  if (from.pollevent() != 0) {
    set_pollevent(from.pollevent());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void FuseFileInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.FuseFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FuseFileInfo::CopyFrom(const FuseFileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.FuseFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FuseFileInfo::IsInitialized() const {

  return true;
}

void FuseFileInfo::Swap(FuseFileInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FuseFileInfo::InternalSwap(FuseFileInfo* other) {
  std::swap(flags_, other->flags_);
  std::swap(fh_, other->fh_);
  std::swap(oldfh_, other->oldfh_);
  std::swap(lockowner_, other->lockowner_);
  std::swap(pollevent_, other->pollevent_);
  std::swap(err_, other->err_);
  path_.Swap(&other->path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FuseFileInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FuseFileInfo_descriptor_;
  metadata.reflection = FuseFileInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FuseFileInfo

// optional int32 flags = 1;
void FuseFileInfo::clear_flags() {
  flags_ = 0;
}
 ::google::protobuf::int32 FuseFileInfo::flags() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.flags)
  return flags_;
}
 void FuseFileInfo::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.flags)
}

// optional int32 fh = 2;
void FuseFileInfo::clear_fh() {
  fh_ = 0;
}
 ::google::protobuf::int32 FuseFileInfo::fh() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.fh)
  return fh_;
}
 void FuseFileInfo::set_fh(::google::protobuf::int32 value) {
  
  fh_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.fh)
}

// optional uint32 oldfh = 3;
void FuseFileInfo::clear_oldfh() {
  oldfh_ = 0u;
}
 ::google::protobuf::uint32 FuseFileInfo::oldfh() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.oldfh)
  return oldfh_;
}
 void FuseFileInfo::set_oldfh(::google::protobuf::uint32 value) {
  
  oldfh_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.oldfh)
}

// optional uint64 lockowner = 5;
void FuseFileInfo::clear_lockowner() {
  lockowner_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 FuseFileInfo::lockowner() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.lockowner)
  return lockowner_;
}
 void FuseFileInfo::set_lockowner(::google::protobuf::uint64 value) {
  
  lockowner_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.lockowner)
}

// optional uint32 pollevent = 6;
void FuseFileInfo::clear_pollevent() {
  pollevent_ = 0u;
}
 ::google::protobuf::uint32 FuseFileInfo::pollevent() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.pollevent)
  return pollevent_;
}
 void FuseFileInfo::set_pollevent(::google::protobuf::uint32 value) {
  
  pollevent_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.pollevent)
}

// optional int32 err = 4;
void FuseFileInfo::clear_err() {
  err_ = 0;
}
 ::google::protobuf::int32 FuseFileInfo::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.err)
  return err_;
}
 void FuseFileInfo::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.err)
}

// optional string path = 7;
void FuseFileInfo::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FuseFileInfo::path() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FuseFileInfo::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.path)
}
 void FuseFileInfo::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.FuseFileInfo.path)
}
 void FuseFileInfo::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.FuseFileInfo.path)
}
 ::std::string* FuseFileInfo::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.FuseFileInfo.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FuseFileInfo::release_path() {
  // @@protoc_insertion_point(field_release:nfsfuse.FuseFileInfo.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FuseFileInfo::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.FuseFileInfo.path)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResult::kBytesreadFieldNumber;
const int ReadResult::kBufferFieldNumber;
const int ReadResult::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResult::ReadResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.ReadResult)
}

void ReadResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ReadResult::ReadResult(const ReadResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.ReadResult)
}

void ReadResult::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bytesread_ = 0;
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_ = 0;
}

ReadResult::~ReadResult() {
  // @@protoc_insertion_point(destructor:nfsfuse.ReadResult)
  SharedDtor();
}

void ReadResult::SharedDtor() {
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ReadResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadResult_descriptor_;
}

const ReadResult& ReadResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

ReadResult* ReadResult::default_instance_ = NULL;

ReadResult* ReadResult::New(::google::protobuf::Arena* arena) const {
  ReadResult* n = new ReadResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadResult::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.ReadResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ReadResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ReadResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(bytesread_, err_);
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ReadResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.ReadResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bytesread = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bytesread_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_buffer;
        break;
      }

      // optional bytes buffer = 2;
      case 2: {
        if (tag == 18) {
         parse_buffer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_err;
        break;
      }

      // optional int32 err = 3;
      case 3: {
        if (tag == 24) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.ReadResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.ReadResult)
  return false;
#undef DO_
}

void ReadResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.ReadResult)
  // optional int32 bytesread = 1;
  if (this->bytesread() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bytesread(), output);
  }

  // optional bytes buffer = 2;
  if (this->buffer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->buffer(), output);
  }

  // optional int32 err = 3;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.ReadResult)
}

::google::protobuf::uint8* ReadResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.ReadResult)
  // optional int32 bytesread = 1;
  if (this->bytesread() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bytesread(), target);
  }

  // optional bytes buffer = 2;
  if (this->buffer().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->buffer(), target);
  }

  // optional int32 err = 3;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.ReadResult)
  return target;
}

int ReadResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.ReadResult)
  int total_size = 0;

  // optional int32 bytesread = 1;
  if (this->bytesread() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bytesread());
  }

  // optional bytes buffer = 2;
  if (this->buffer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buffer());
  }

  // optional int32 err = 3;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.ReadResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReadResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.ReadResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.ReadResult)
    MergeFrom(*source);
  }
}

void ReadResult::MergeFrom(const ReadResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.ReadResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.bytesread() != 0) {
    set_bytesread(from.bytesread());
  }
  if (from.buffer().size() > 0) {

    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void ReadResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.ReadResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResult::CopyFrom(const ReadResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.ReadResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadResult::IsInitialized() const {

  return true;
}

void ReadResult::Swap(ReadResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadResult::InternalSwap(ReadResult* other) {
  std::swap(bytesread_, other->bytesread_);
  buffer_.Swap(&other->buffer_);
  std::swap(err_, other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadResult_descriptor_;
  metadata.reflection = ReadResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadResult

// optional int32 bytesread = 1;
void ReadResult::clear_bytesread() {
  bytesread_ = 0;
}
 ::google::protobuf::int32 ReadResult::bytesread() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadResult.bytesread)
  return bytesread_;
}
 void ReadResult::set_bytesread(::google::protobuf::int32 value) {
  
  bytesread_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.ReadResult.bytesread)
}

// optional bytes buffer = 2;
void ReadResult::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ReadResult::buffer() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadResult.buffer)
  return buffer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReadResult::set_buffer(const ::std::string& value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.ReadResult.buffer)
}
 void ReadResult::set_buffer(const char* value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.ReadResult.buffer)
}
 void ReadResult::set_buffer(const void* value, size_t size) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.ReadResult.buffer)
}
 ::std::string* ReadResult::mutable_buffer() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.ReadResult.buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReadResult::release_buffer() {
  // @@protoc_insertion_point(field_release:nfsfuse.ReadResult.buffer)
  
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReadResult::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    
  } else {
    
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.ReadResult.buffer)
}

// optional int32 err = 3;
void ReadResult::clear_err() {
  err_ = 0;
}
 ::google::protobuf::int32 ReadResult::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadResult.err)
  return err_;
}
 void ReadResult::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.ReadResult.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRequest::kPathFieldNumber;
const int ReadRequest::kSizeFieldNumber;
const int ReadRequest::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRequest::ReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.ReadRequest)
}

void ReadRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ReadRequest::ReadRequest(const ReadRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.ReadRequest)
}

void ReadRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0u;
  offset_ = GOOGLE_LONGLONG(0);
}

ReadRequest::~ReadRequest() {
  // @@protoc_insertion_point(destructor:nfsfuse.ReadRequest)
  SharedDtor();
}

void ReadRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ReadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadRequest_descriptor_;
}

const ReadRequest& ReadRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

ReadRequest* ReadRequest::default_instance_ = NULL;

ReadRequest* ReadRequest::New(::google::protobuf::Arena* arena) const {
  ReadRequest* n = new ReadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.ReadRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ReadRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ReadRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(offset_, size_);
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.ReadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.ReadRequest.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_size;
        break;
      }

      // optional uint32 size = 2;
      case 2: {
        if (tag == 16) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_offset;
        break;
      }

      // optional int64 offset = 3;
      case 3: {
        if (tag == 24) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.ReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.ReadRequest)
  return false;
#undef DO_
}

void ReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.ReadRequest)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.ReadRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional uint32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->size(), output);
  }

  // optional int64 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->offset(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.ReadRequest)
}

::google::protobuf::uint8* ReadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.ReadRequest)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.ReadRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional uint32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->size(), target);
  }

  // optional int64 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->offset(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.ReadRequest)
  return target;
}

int ReadRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.ReadRequest)
  int total_size = 0;

  // optional string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional uint32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  // optional int64 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->offset());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.ReadRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReadRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.ReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.ReadRequest)
    MergeFrom(*source);
  }
}

void ReadRequest::MergeFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.ReadRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
}

void ReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRequest::CopyFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRequest::IsInitialized() const {

  return true;
}

void ReadRequest::Swap(ReadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRequest::InternalSwap(ReadRequest* other) {
  path_.Swap(&other->path_);
  std::swap(size_, other->size_);
  std::swap(offset_, other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadRequest_descriptor_;
  metadata.reflection = ReadRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadRequest

// optional string path = 1;
void ReadRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ReadRequest::path() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReadRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.ReadRequest.path)
}
 void ReadRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.ReadRequest.path)
}
 void ReadRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.ReadRequest.path)
}
 ::std::string* ReadRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.ReadRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReadRequest::release_path() {
  // @@protoc_insertion_point(field_release:nfsfuse.ReadRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReadRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.ReadRequest.path)
}

// optional uint32 size = 2;
void ReadRequest::clear_size() {
  size_ = 0u;
}
 ::google::protobuf::uint32 ReadRequest::size() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadRequest.size)
  return size_;
}
 void ReadRequest::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.ReadRequest.size)
}

// optional int64 offset = 3;
void ReadRequest::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ReadRequest::offset() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadRequest.offset)
  return offset_;
}
 void ReadRequest::set_offset(::google::protobuf::int64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.ReadRequest.offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteRequest::kPathFieldNumber;
const int WriteRequest::kSizeFieldNumber;
const int WriteRequest::kOffsetFieldNumber;
const int WriteRequest::kBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteRequest::WriteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.WriteRequest)
}

void WriteRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

WriteRequest::WriteRequest(const WriteRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.WriteRequest)
}

void WriteRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0u;
  offset_ = 0;
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WriteRequest::~WriteRequest() {
  // @@protoc_insertion_point(destructor:nfsfuse.WriteRequest)
  SharedDtor();
}

void WriteRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void WriteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WriteRequest_descriptor_;
}

const WriteRequest& WriteRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

WriteRequest* WriteRequest::default_instance_ = NULL;

WriteRequest* WriteRequest::New(::google::protobuf::Arena* arena) const {
  WriteRequest* n = new WriteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.WriteRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WriteRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WriteRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(size_, offset_);
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool WriteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.WriteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.WriteRequest.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_size;
        break;
      }

      // optional uint32 size = 2;
      case 2: {
        if (tag == 16) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_offset;
        break;
      }

      // optional int32 offset = 3;
      case 3: {
        if (tag == 24) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_buffer;
        break;
      }

      // optional bytes buffer = 4;
      case 4: {
        if (tag == 34) {
         parse_buffer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.WriteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.WriteRequest)
  return false;
#undef DO_
}

void WriteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.WriteRequest)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.WriteRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional uint32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->size(), output);
  }

  // optional int32 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->offset(), output);
  }

  // optional bytes buffer = 4;
  if (this->buffer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->buffer(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.WriteRequest)
}

::google::protobuf::uint8* WriteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.WriteRequest)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.WriteRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional uint32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->size(), target);
  }

  // optional int32 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->offset(), target);
  }

  // optional bytes buffer = 4;
  if (this->buffer().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->buffer(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.WriteRequest)
  return target;
}

int WriteRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.WriteRequest)
  int total_size = 0;

  // optional string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional uint32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  // optional int32 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  // optional bytes buffer = 4;
  if (this->buffer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buffer());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.WriteRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const WriteRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.WriteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.WriteRequest)
    MergeFrom(*source);
  }
}

void WriteRequest::MergeFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.WriteRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.buffer().size() > 0) {

    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
}

void WriteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteRequest::CopyFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteRequest::IsInitialized() const {

  return true;
}

void WriteRequest::Swap(WriteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteRequest::InternalSwap(WriteRequest* other) {
  path_.Swap(&other->path_);
  std::swap(size_, other->size_);
  std::swap(offset_, other->offset_);
  buffer_.Swap(&other->buffer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WriteRequest_descriptor_;
  metadata.reflection = WriteRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteRequest

// optional string path = 1;
void WriteRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WriteRequest::path() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WriteRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.WriteRequest.path)
}
 void WriteRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.WriteRequest.path)
}
 void WriteRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.WriteRequest.path)
}
 ::std::string* WriteRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.WriteRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WriteRequest::release_path() {
  // @@protoc_insertion_point(field_release:nfsfuse.WriteRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WriteRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.WriteRequest.path)
}

// optional uint32 size = 2;
void WriteRequest::clear_size() {
  size_ = 0u;
}
 ::google::protobuf::uint32 WriteRequest::size() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteRequest.size)
  return size_;
}
 void WriteRequest::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.WriteRequest.size)
}

// optional int32 offset = 3;
void WriteRequest::clear_offset() {
  offset_ = 0;
}
 ::google::protobuf::int32 WriteRequest::offset() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteRequest.offset)
  return offset_;
}
 void WriteRequest::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.WriteRequest.offset)
}

// optional bytes buffer = 4;
void WriteRequest::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WriteRequest::buffer() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteRequest.buffer)
  return buffer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WriteRequest::set_buffer(const ::std::string& value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.WriteRequest.buffer)
}
 void WriteRequest::set_buffer(const char* value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.WriteRequest.buffer)
}
 void WriteRequest::set_buffer(const void* value, size_t size) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.WriteRequest.buffer)
}
 ::std::string* WriteRequest::mutable_buffer() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.WriteRequest.buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WriteRequest::release_buffer() {
  // @@protoc_insertion_point(field_release:nfsfuse.WriteRequest.buffer)
  
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WriteRequest::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    
  } else {
    
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.WriteRequest.buffer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteResult::kNbytesFieldNumber;
const int WriteResult::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteResult::WriteResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.WriteResult)
}

void WriteResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

WriteResult::WriteResult(const WriteResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.WriteResult)
}

void WriteResult::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  nbytes_ = 0;
  err_ = 0;
}

WriteResult::~WriteResult() {
  // @@protoc_insertion_point(destructor:nfsfuse.WriteResult)
  SharedDtor();
}

void WriteResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WriteResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WriteResult_descriptor_;
}

const WriteResult& WriteResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

WriteResult* WriteResult::default_instance_ = NULL;

WriteResult* WriteResult::New(::google::protobuf::Arena* arena) const {
  WriteResult* n = new WriteResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteResult::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.WriteResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WriteResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WriteResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(nbytes_, err_);

#undef ZR_HELPER_
#undef ZR_

}

bool WriteResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.WriteResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 nbytes = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nbytes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional int32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.WriteResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.WriteResult)
  return false;
#undef DO_
}

void WriteResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.WriteResult)
  // optional int32 nbytes = 1;
  if (this->nbytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nbytes(), output);
  }

  // optional int32 err = 2;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.WriteResult)
}

::google::protobuf::uint8* WriteResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.WriteResult)
  // optional int32 nbytes = 1;
  if (this->nbytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nbytes(), target);
  }

  // optional int32 err = 2;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.WriteResult)
  return target;
}

int WriteResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.WriteResult)
  int total_size = 0;

  // optional int32 nbytes = 1;
  if (this->nbytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nbytes());
  }

  // optional int32 err = 2;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.WriteResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const WriteResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.WriteResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.WriteResult)
    MergeFrom(*source);
  }
}

void WriteResult::MergeFrom(const WriteResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.WriteResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.nbytes() != 0) {
    set_nbytes(from.nbytes());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void WriteResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.WriteResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteResult::CopyFrom(const WriteResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.WriteResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteResult::IsInitialized() const {

  return true;
}

void WriteResult::Swap(WriteResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteResult::InternalSwap(WriteResult* other) {
  std::swap(nbytes_, other->nbytes_);
  std::swap(err_, other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WriteResult_descriptor_;
  metadata.reflection = WriteResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteResult

// optional int32 nbytes = 1;
void WriteResult::clear_nbytes() {
  nbytes_ = 0;
}
 ::google::protobuf::int32 WriteResult::nbytes() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteResult.nbytes)
  return nbytes_;
}
 void WriteResult::set_nbytes(::google::protobuf::int32 value) {
  
  nbytes_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.WriteResult.nbytes)
}

// optional int32 err = 2;
void WriteResult::clear_err() {
  err_ = 0;
}
 ::google::protobuf::int32 WriteResult::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteResult.err)
  return err_;
}
 void WriteResult::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.WriteResult.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRequest::kPathFieldNumber;
const int CreateRequest::kModeFieldNumber;
const int CreateRequest::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRequest::CreateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.CreateRequest)
}

void CreateRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CreateRequest::CreateRequest(const CreateRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.CreateRequest)
}

void CreateRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0;
  flags_ = 0;
}

CreateRequest::~CreateRequest() {
  // @@protoc_insertion_point(destructor:nfsfuse.CreateRequest)
  SharedDtor();
}

void CreateRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CreateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateRequest_descriptor_;
}

const CreateRequest& CreateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

CreateRequest* CreateRequest::default_instance_ = NULL;

CreateRequest* CreateRequest::New(::google::protobuf::Arena* arena) const {
  CreateRequest* n = new CreateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.CreateRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CreateRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CreateRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mode_, flags_);
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CreateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.CreateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.CreateRequest.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mode;
        break;
      }

      // optional int32 mode = 2;
      case 2: {
        if (tag == 16) {
         parse_mode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_flags;
        break;
      }

      // optional int32 flags = 3;
      case 3: {
        if (tag == 24) {
         parse_flags:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.CreateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.CreateRequest)
  return false;
#undef DO_
}

void CreateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.CreateRequest)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.CreateRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional int32 mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mode(), output);
  }

  // optional int32 flags = 3;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->flags(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.CreateRequest)
}

::google::protobuf::uint8* CreateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.CreateRequest)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.CreateRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional int32 mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mode(), target);
  }

  // optional int32 flags = 3;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->flags(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.CreateRequest)
  return target;
}

int CreateRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.CreateRequest)
  int total_size = 0;

  // optional string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional int32 mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  // optional int32 flags = 3;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flags());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.CreateRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.CreateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.CreateRequest)
    MergeFrom(*source);
  }
}

void CreateRequest::MergeFrom(const CreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.CreateRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
}

void CreateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.CreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRequest::CopyFrom(const CreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.CreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRequest::IsInitialized() const {

  return true;
}

void CreateRequest::Swap(CreateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRequest::InternalSwap(CreateRequest* other) {
  path_.Swap(&other->path_);
  std::swap(mode_, other->mode_);
  std::swap(flags_, other->flags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateRequest_descriptor_;
  metadata.reflection = CreateRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateRequest

// optional string path = 1;
void CreateRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CreateRequest::path() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.CreateRequest.path)
}
 void CreateRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.CreateRequest.path)
}
 void CreateRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.CreateRequest.path)
}
 ::std::string* CreateRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.CreateRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateRequest::release_path() {
  // @@protoc_insertion_point(field_release:nfsfuse.CreateRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.CreateRequest.path)
}

// optional int32 mode = 2;
void CreateRequest::clear_mode() {
  mode_ = 0;
}
 ::google::protobuf::int32 CreateRequest::mode() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateRequest.mode)
  return mode_;
}
 void CreateRequest::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateRequest.mode)
}

// optional int32 flags = 3;
void CreateRequest::clear_flags() {
  flags_ = 0;
}
 ::google::protobuf::int32 CreateRequest::flags() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateRequest.flags)
  return flags_;
}
 void CreateRequest::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateRequest.flags)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateResult::kFlagsFieldNumber;
const int CreateResult::kFhFieldNumber;
const int CreateResult::kOldfhFieldNumber;
const int CreateResult::kLockownerFieldNumber;
const int CreateResult::kPolleventFieldNumber;
const int CreateResult::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateResult::CreateResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.CreateResult)
}

void CreateResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CreateResult::CreateResult(const CreateResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.CreateResult)
}

void CreateResult::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  flags_ = 0;
  fh_ = 0;
  oldfh_ = 0u;
  lockowner_ = GOOGLE_ULONGLONG(0);
  pollevent_ = 0u;
  err_ = 0;
}

CreateResult::~CreateResult() {
  // @@protoc_insertion_point(destructor:nfsfuse.CreateResult)
  SharedDtor();
}

void CreateResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateResult_descriptor_;
}

const CreateResult& CreateResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

CreateResult* CreateResult::default_instance_ = NULL;

CreateResult* CreateResult::New(::google::protobuf::Arena* arena) const {
  CreateResult* n = new CreateResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateResult::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.CreateResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CreateResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CreateResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(flags_, err_);

#undef ZR_HELPER_
#undef ZR_

}

bool CreateResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.CreateResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flags = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_fh;
        break;
      }

      // optional int32 fh = 2;
      case 2: {
        if (tag == 16) {
         parse_fh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_oldfh;
        break;
      }

      // optional uint32 oldfh = 3;
      case 3: {
        if (tag == 24) {
         parse_oldfh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oldfh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_lockowner;
        break;
      }

      // optional uint64 lockowner = 5;
      case 5: {
        if (tag == 40) {
         parse_lockowner:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lockowner_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_pollevent;
        break;
      }

      // optional uint32 pollevent = 6;
      case 6: {
        if (tag == 48) {
         parse_pollevent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pollevent_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_err;
        break;
      }

      // optional int32 err = 7;
      case 7: {
        if (tag == 56) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.CreateResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.CreateResult)
  return false;
#undef DO_
}

void CreateResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.CreateResult)
  // optional int32 flags = 1;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flags(), output);
  }

  // optional int32 fh = 2;
  if (this->fh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fh(), output);
  }

  // optional uint32 oldfh = 3;
  if (this->oldfh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->oldfh(), output);
  }

  // optional uint64 lockowner = 5;
  if (this->lockowner() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->lockowner(), output);
  }

  // optional uint32 pollevent = 6;
  if (this->pollevent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pollevent(), output);
  }

  // optional int32 err = 7;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.CreateResult)
}

::google::protobuf::uint8* CreateResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.CreateResult)
  // optional int32 flags = 1;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flags(), target);
  }

  // optional int32 fh = 2;
  if (this->fh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fh(), target);
  }

  // optional uint32 oldfh = 3;
  if (this->oldfh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->oldfh(), target);
  }

  // optional uint64 lockowner = 5;
  if (this->lockowner() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->lockowner(), target);
  }

  // optional uint32 pollevent = 6;
  if (this->pollevent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pollevent(), target);
  }

  // optional int32 err = 7;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.CreateResult)
  return target;
}

int CreateResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.CreateResult)
  int total_size = 0;

  // optional int32 flags = 1;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flags());
  }

  // optional int32 fh = 2;
  if (this->fh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fh());
  }

  // optional uint32 oldfh = 3;
  if (this->oldfh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->oldfh());
  }

  // optional uint64 lockowner = 5;
  if (this->lockowner() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lockowner());
  }

  // optional uint32 pollevent = 6;
  if (this->pollevent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pollevent());
  }

  // optional int32 err = 7;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.CreateResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.CreateResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.CreateResult)
    MergeFrom(*source);
  }
}

void CreateResult::MergeFrom(const CreateResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.CreateResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
  if (from.fh() != 0) {
    set_fh(from.fh());
  }
  if (from.oldfh() != 0) {
    set_oldfh(from.oldfh());
  }
  if (from.lockowner() != 0) {
    set_lockowner(from.lockowner());
  }
  if (from.pollevent() != 0) {
    set_pollevent(from.pollevent());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void CreateResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.CreateResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateResult::CopyFrom(const CreateResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.CreateResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateResult::IsInitialized() const {

  return true;
}

void CreateResult::Swap(CreateResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateResult::InternalSwap(CreateResult* other) {
  std::swap(flags_, other->flags_);
  std::swap(fh_, other->fh_);
  std::swap(oldfh_, other->oldfh_);
  std::swap(lockowner_, other->lockowner_);
  std::swap(pollevent_, other->pollevent_);
  std::swap(err_, other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateResult_descriptor_;
  metadata.reflection = CreateResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateResult

// optional int32 flags = 1;
void CreateResult::clear_flags() {
  flags_ = 0;
}
 ::google::protobuf::int32 CreateResult::flags() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateResult.flags)
  return flags_;
}
 void CreateResult::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateResult.flags)
}

// optional int32 fh = 2;
void CreateResult::clear_fh() {
  fh_ = 0;
}
 ::google::protobuf::int32 CreateResult::fh() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateResult.fh)
  return fh_;
}
 void CreateResult::set_fh(::google::protobuf::int32 value) {
  
  fh_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateResult.fh)
}

// optional uint32 oldfh = 3;
void CreateResult::clear_oldfh() {
  oldfh_ = 0u;
}
 ::google::protobuf::uint32 CreateResult::oldfh() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateResult.oldfh)
  return oldfh_;
}
 void CreateResult::set_oldfh(::google::protobuf::uint32 value) {
  
  oldfh_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateResult.oldfh)
}

// optional uint64 lockowner = 5;
void CreateResult::clear_lockowner() {
  lockowner_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CreateResult::lockowner() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateResult.lockowner)
  return lockowner_;
}
 void CreateResult::set_lockowner(::google::protobuf::uint64 value) {
  
  lockowner_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateResult.lockowner)
}

// optional uint32 pollevent = 6;
void CreateResult::clear_pollevent() {
  pollevent_ = 0u;
}
 ::google::protobuf::uint32 CreateResult::pollevent() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateResult.pollevent)
  return pollevent_;
}
 void CreateResult::set_pollevent(::google::protobuf::uint32 value) {
  
  pollevent_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateResult.pollevent)
}

// optional int32 err = 7;
void CreateResult::clear_err() {
  err_ = 0;
}
 ::google::protobuf::int32 CreateResult::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateResult.err)
  return err_;
}
 void CreateResult::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateResult.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MkdirRequest::kSFieldNumber;
const int MkdirRequest::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MkdirRequest::MkdirRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.MkdirRequest)
}

void MkdirRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MkdirRequest::MkdirRequest(const MkdirRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.MkdirRequest)
}

void MkdirRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0;
}

MkdirRequest::~MkdirRequest() {
  // @@protoc_insertion_point(destructor:nfsfuse.MkdirRequest)
  SharedDtor();
}

void MkdirRequest::SharedDtor() {
  s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MkdirRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MkdirRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MkdirRequest_descriptor_;
}

const MkdirRequest& MkdirRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

MkdirRequest* MkdirRequest::default_instance_ = NULL;

MkdirRequest* MkdirRequest::New(::google::protobuf::Arena* arena) const {
  MkdirRequest* n = new MkdirRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MkdirRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.MkdirRequest)
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0;
}

bool MkdirRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.MkdirRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string s = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_s()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->s().data(), this->s().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.MkdirRequest.s"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mode;
        break;
      }

      // optional int32 mode = 2;
      case 2: {
        if (tag == 16) {
         parse_mode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.MkdirRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.MkdirRequest)
  return false;
#undef DO_
}

void MkdirRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.MkdirRequest)
  // optional string s = 1;
  if (this->s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->s().data(), this->s().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.MkdirRequest.s");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->s(), output);
  }

  // optional int32 mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mode(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.MkdirRequest)
}

::google::protobuf::uint8* MkdirRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.MkdirRequest)
  // optional string s = 1;
  if (this->s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->s().data(), this->s().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.MkdirRequest.s");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->s(), target);
  }

  // optional int32 mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.MkdirRequest)
  return target;
}

int MkdirRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.MkdirRequest)
  int total_size = 0;

  // optional string s = 1;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->s());
  }

  // optional int32 mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MkdirRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.MkdirRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MkdirRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MkdirRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.MkdirRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.MkdirRequest)
    MergeFrom(*source);
  }
}

void MkdirRequest::MergeFrom(const MkdirRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.MkdirRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.s().size() > 0) {

    s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void MkdirRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.MkdirRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MkdirRequest::CopyFrom(const MkdirRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.MkdirRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MkdirRequest::IsInitialized() const {

  return true;
}

void MkdirRequest::Swap(MkdirRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MkdirRequest::InternalSwap(MkdirRequest* other) {
  s_.Swap(&other->s_);
  std::swap(mode_, other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MkdirRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MkdirRequest_descriptor_;
  metadata.reflection = MkdirRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MkdirRequest

// optional string s = 1;
void MkdirRequest::clear_s() {
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MkdirRequest::s() const {
  // @@protoc_insertion_point(field_get:nfsfuse.MkdirRequest.s)
  return s_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MkdirRequest::set_s(const ::std::string& value) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.MkdirRequest.s)
}
 void MkdirRequest::set_s(const char* value) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.MkdirRequest.s)
}
 void MkdirRequest::set_s(const char* value, size_t size) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.MkdirRequest.s)
}
 ::std::string* MkdirRequest::mutable_s() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.MkdirRequest.s)
  return s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MkdirRequest::release_s() {
  // @@protoc_insertion_point(field_release:nfsfuse.MkdirRequest.s)
  
  return s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MkdirRequest::set_allocated_s(::std::string* s) {
  if (s != NULL) {
    
  } else {
    
  }
  s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.MkdirRequest.s)
}

// optional int32 mode = 2;
void MkdirRequest::clear_mode() {
  mode_ = 0;
}
 ::google::protobuf::int32 MkdirRequest::mode() const {
  // @@protoc_insertion_point(field_get:nfsfuse.MkdirRequest.mode)
  return mode_;
}
 void MkdirRequest::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.MkdirRequest.mode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OutputInfo::kStrFieldNumber;
const int OutputInfo::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OutputInfo::OutputInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.OutputInfo)
}

void OutputInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OutputInfo::OutputInfo(const OutputInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.OutputInfo)
}

void OutputInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_ = 0;
}

OutputInfo::~OutputInfo() {
  // @@protoc_insertion_point(destructor:nfsfuse.OutputInfo)
  SharedDtor();
}

void OutputInfo::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void OutputInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OutputInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OutputInfo_descriptor_;
}

const OutputInfo& OutputInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

OutputInfo* OutputInfo::default_instance_ = NULL;

OutputInfo* OutputInfo::New(::google::protobuf::Arena* arena) const {
  OutputInfo* n = new OutputInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OutputInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.OutputInfo)
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_ = 0;
}

bool OutputInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.OutputInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string str = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.OutputInfo.str"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional int32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.OutputInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.OutputInfo)
  return false;
#undef DO_
}

void OutputInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.OutputInfo)
  // optional string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.OutputInfo.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->str(), output);
  }

  // optional int32 err = 2;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.OutputInfo)
}

::google::protobuf::uint8* OutputInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.OutputInfo)
  // optional string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.OutputInfo.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  // optional int32 err = 2;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.OutputInfo)
  return target;
}

int OutputInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.OutputInfo)
  int total_size = 0;

  // optional string str = 1;
  if (this->str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());
  }

  // optional int32 err = 2;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OutputInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.OutputInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OutputInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OutputInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.OutputInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.OutputInfo)
    MergeFrom(*source);
  }
}

void OutputInfo::MergeFrom(const OutputInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.OutputInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.str().size() > 0) {

    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void OutputInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.OutputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutputInfo::CopyFrom(const OutputInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.OutputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutputInfo::IsInitialized() const {

  return true;
}

void OutputInfo::Swap(OutputInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OutputInfo::InternalSwap(OutputInfo* other) {
  str_.Swap(&other->str_);
  std::swap(err_, other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OutputInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OutputInfo_descriptor_;
  metadata.reflection = OutputInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OutputInfo

// optional string str = 1;
void OutputInfo::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OutputInfo::str() const {
  // @@protoc_insertion_point(field_get:nfsfuse.OutputInfo.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OutputInfo::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.OutputInfo.str)
}
 void OutputInfo::set_str(const char* value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.OutputInfo.str)
}
 void OutputInfo::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.OutputInfo.str)
}
 ::std::string* OutputInfo::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.OutputInfo.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OutputInfo::release_str() {
  // @@protoc_insertion_point(field_release:nfsfuse.OutputInfo.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OutputInfo::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.OutputInfo.str)
}

// optional int32 err = 2;
void OutputInfo::clear_err() {
  err_ = 0;
}
 ::google::protobuf::int32 OutputInfo::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.OutputInfo.err)
  return err_;
}
 void OutputInfo::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.OutputInfo.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RenameRequest::kFpFieldNumber;
const int RenameRequest::kTpFieldNumber;
const int RenameRequest::kFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RenameRequest::RenameRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.RenameRequest)
}

void RenameRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RenameRequest::RenameRequest(const RenameRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.RenameRequest)
}

void RenameRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  fp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flag_ = 0u;
}

RenameRequest::~RenameRequest() {
  // @@protoc_insertion_point(destructor:nfsfuse.RenameRequest)
  SharedDtor();
}

void RenameRequest::SharedDtor() {
  fp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RenameRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RenameRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RenameRequest_descriptor_;
}

const RenameRequest& RenameRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

RenameRequest* RenameRequest::default_instance_ = NULL;

RenameRequest* RenameRequest::New(::google::protobuf::Arena* arena) const {
  RenameRequest* n = new RenameRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RenameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.RenameRequest)
  fp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flag_ = 0u;
}

bool RenameRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.RenameRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string fp = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fp().data(), this->fp().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.RenameRequest.fp"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_tp;
        break;
      }

      // optional string tp = 2;
      case 2: {
        if (tag == 18) {
         parse_tp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tp().data(), this->tp().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.RenameRequest.tp"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_flag;
        break;
      }

      // optional uint32 flag = 3;
      case 3: {
        if (tag == 24) {
         parse_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.RenameRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.RenameRequest)
  return false;
#undef DO_
}

void RenameRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.RenameRequest)
  // optional string fp = 1;
  if (this->fp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fp().data(), this->fp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.RenameRequest.fp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fp(), output);
  }

  // optional string tp = 2;
  if (this->tp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tp().data(), this->tp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.RenameRequest.tp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tp(), output);
  }

  // optional uint32 flag = 3;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flag(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.RenameRequest)
}

::google::protobuf::uint8* RenameRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.RenameRequest)
  // optional string fp = 1;
  if (this->fp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fp().data(), this->fp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.RenameRequest.fp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fp(), target);
  }

  // optional string tp = 2;
  if (this->tp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tp().data(), this->tp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.RenameRequest.tp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tp(), target);
  }

  // optional uint32 flag = 3;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flag(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.RenameRequest)
  return target;
}

int RenameRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.RenameRequest)
  int total_size = 0;

  // optional string fp = 1;
  if (this->fp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fp());
  }

  // optional string tp = 2;
  if (this->tp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tp());
  }

  // optional uint32 flag = 3;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flag());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RenameRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.RenameRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RenameRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RenameRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.RenameRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.RenameRequest)
    MergeFrom(*source);
  }
}

void RenameRequest::MergeFrom(const RenameRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.RenameRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.fp().size() > 0) {

    fp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fp_);
  }
  if (from.tp().size() > 0) {

    tp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tp_);
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
}

void RenameRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.RenameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameRequest::CopyFrom(const RenameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.RenameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameRequest::IsInitialized() const {

  return true;
}

void RenameRequest::Swap(RenameRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RenameRequest::InternalSwap(RenameRequest* other) {
  fp_.Swap(&other->fp_);
  tp_.Swap(&other->tp_);
  std::swap(flag_, other->flag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RenameRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RenameRequest_descriptor_;
  metadata.reflection = RenameRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RenameRequest

// optional string fp = 1;
void RenameRequest::clear_fp() {
  fp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RenameRequest::fp() const {
  // @@protoc_insertion_point(field_get:nfsfuse.RenameRequest.fp)
  return fp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RenameRequest::set_fp(const ::std::string& value) {
  
  fp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.RenameRequest.fp)
}
 void RenameRequest::set_fp(const char* value) {
  
  fp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.RenameRequest.fp)
}
 void RenameRequest::set_fp(const char* value, size_t size) {
  
  fp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.RenameRequest.fp)
}
 ::std::string* RenameRequest::mutable_fp() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.RenameRequest.fp)
  return fp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RenameRequest::release_fp() {
  // @@protoc_insertion_point(field_release:nfsfuse.RenameRequest.fp)
  
  return fp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RenameRequest::set_allocated_fp(::std::string* fp) {
  if (fp != NULL) {
    
  } else {
    
  }
  fp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fp);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.RenameRequest.fp)
}

// optional string tp = 2;
void RenameRequest::clear_tp() {
  tp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RenameRequest::tp() const {
  // @@protoc_insertion_point(field_get:nfsfuse.RenameRequest.tp)
  return tp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RenameRequest::set_tp(const ::std::string& value) {
  
  tp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.RenameRequest.tp)
}
 void RenameRequest::set_tp(const char* value) {
  
  tp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.RenameRequest.tp)
}
 void RenameRequest::set_tp(const char* value, size_t size) {
  
  tp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.RenameRequest.tp)
}
 ::std::string* RenameRequest::mutable_tp() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.RenameRequest.tp)
  return tp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RenameRequest::release_tp() {
  // @@protoc_insertion_point(field_release:nfsfuse.RenameRequest.tp)
  
  return tp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RenameRequest::set_allocated_tp(::std::string* tp) {
  if (tp != NULL) {
    
  } else {
    
  }
  tp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tp);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.RenameRequest.tp)
}

// optional uint32 flag = 3;
void RenameRequest::clear_flag() {
  flag_ = 0u;
}
 ::google::protobuf::uint32 RenameRequest::flag() const {
  // @@protoc_insertion_point(field_get:nfsfuse.RenameRequest.flag)
  return flag_;
}
 void RenameRequest::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.RenameRequest.flag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UtimensRequest::kPathFieldNumber;
const int UtimensRequest::kSecFieldNumber;
const int UtimensRequest::kNsecFieldNumber;
const int UtimensRequest::kSec2FieldNumber;
const int UtimensRequest::kNsec2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UtimensRequest::UtimensRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.UtimensRequest)
}

void UtimensRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UtimensRequest::UtimensRequest(const UtimensRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.UtimensRequest)
}

void UtimensRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sec_ = 0;
  nsec_ = GOOGLE_LONGLONG(0);
  sec2_ = 0;
  nsec2_ = GOOGLE_LONGLONG(0);
}

UtimensRequest::~UtimensRequest() {
  // @@protoc_insertion_point(destructor:nfsfuse.UtimensRequest)
  SharedDtor();
}

void UtimensRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UtimensRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UtimensRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UtimensRequest_descriptor_;
}

const UtimensRequest& UtimensRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

UtimensRequest* UtimensRequest::default_instance_ = NULL;

UtimensRequest* UtimensRequest::New(::google::protobuf::Arena* arena) const {
  UtimensRequest* n = new UtimensRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UtimensRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.UtimensRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UtimensRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UtimensRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(nsec_, nsec2_);
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool UtimensRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.UtimensRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.UtimensRequest.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sec;
        break;
      }

      // optional int32 sec = 2;
      case 2: {
        if (tag == 16) {
         parse_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sec_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_nsec;
        break;
      }

      // optional int64 nsec = 3;
      case 3: {
        if (tag == 24) {
         parse_nsec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nsec_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sec2;
        break;
      }

      // optional int32 sec2 = 4;
      case 4: {
        if (tag == 32) {
         parse_sec2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sec2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_nsec2;
        break;
      }

      // optional int64 nsec2 = 5;
      case 5: {
        if (tag == 40) {
         parse_nsec2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nsec2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.UtimensRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.UtimensRequest)
  return false;
#undef DO_
}

void UtimensRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.UtimensRequest)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.UtimensRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional int32 sec = 2;
  if (this->sec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sec(), output);
  }

  // optional int64 nsec = 3;
  if (this->nsec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->nsec(), output);
  }

  // optional int32 sec2 = 4;
  if (this->sec2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sec2(), output);
  }

  // optional int64 nsec2 = 5;
  if (this->nsec2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->nsec2(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.UtimensRequest)
}

::google::protobuf::uint8* UtimensRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.UtimensRequest)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.UtimensRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional int32 sec = 2;
  if (this->sec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sec(), target);
  }

  // optional int64 nsec = 3;
  if (this->nsec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->nsec(), target);
  }

  // optional int32 sec2 = 4;
  if (this->sec2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sec2(), target);
  }

  // optional int64 nsec2 = 5;
  if (this->nsec2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->nsec2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.UtimensRequest)
  return target;
}

int UtimensRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.UtimensRequest)
  int total_size = 0;

  // optional string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional int32 sec = 2;
  if (this->sec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sec());
  }

  // optional int64 nsec = 3;
  if (this->nsec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nsec());
  }

  // optional int32 sec2 = 4;
  if (this->sec2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sec2());
  }

  // optional int64 nsec2 = 5;
  if (this->nsec2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nsec2());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UtimensRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.UtimensRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UtimensRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UtimensRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.UtimensRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.UtimensRequest)
    MergeFrom(*source);
  }
}

void UtimensRequest::MergeFrom(const UtimensRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.UtimensRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.sec() != 0) {
    set_sec(from.sec());
  }
  if (from.nsec() != 0) {
    set_nsec(from.nsec());
  }
  if (from.sec2() != 0) {
    set_sec2(from.sec2());
  }
  if (from.nsec2() != 0) {
    set_nsec2(from.nsec2());
  }
}

void UtimensRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.UtimensRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UtimensRequest::CopyFrom(const UtimensRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.UtimensRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UtimensRequest::IsInitialized() const {

  return true;
}

void UtimensRequest::Swap(UtimensRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UtimensRequest::InternalSwap(UtimensRequest* other) {
  path_.Swap(&other->path_);
  std::swap(sec_, other->sec_);
  std::swap(nsec_, other->nsec_);
  std::swap(sec2_, other->sec2_);
  std::swap(nsec2_, other->nsec2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UtimensRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UtimensRequest_descriptor_;
  metadata.reflection = UtimensRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UtimensRequest

// optional string path = 1;
void UtimensRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UtimensRequest::path() const {
  // @@protoc_insertion_point(field_get:nfsfuse.UtimensRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UtimensRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.UtimensRequest.path)
}
 void UtimensRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.UtimensRequest.path)
}
 void UtimensRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.UtimensRequest.path)
}
 ::std::string* UtimensRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.UtimensRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UtimensRequest::release_path() {
  // @@protoc_insertion_point(field_release:nfsfuse.UtimensRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UtimensRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.UtimensRequest.path)
}

// optional int32 sec = 2;
void UtimensRequest::clear_sec() {
  sec_ = 0;
}
 ::google::protobuf::int32 UtimensRequest::sec() const {
  // @@protoc_insertion_point(field_get:nfsfuse.UtimensRequest.sec)
  return sec_;
}
 void UtimensRequest::set_sec(::google::protobuf::int32 value) {
  
  sec_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.UtimensRequest.sec)
}

// optional int64 nsec = 3;
void UtimensRequest::clear_nsec() {
  nsec_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 UtimensRequest::nsec() const {
  // @@protoc_insertion_point(field_get:nfsfuse.UtimensRequest.nsec)
  return nsec_;
}
 void UtimensRequest::set_nsec(::google::protobuf::int64 value) {
  
  nsec_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.UtimensRequest.nsec)
}

// optional int32 sec2 = 4;
void UtimensRequest::clear_sec2() {
  sec2_ = 0;
}
 ::google::protobuf::int32 UtimensRequest::sec2() const {
  // @@protoc_insertion_point(field_get:nfsfuse.UtimensRequest.sec2)
  return sec2_;
}
 void UtimensRequest::set_sec2(::google::protobuf::int32 value) {
  
  sec2_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.UtimensRequest.sec2)
}

// optional int64 nsec2 = 5;
void UtimensRequest::clear_nsec2() {
  nsec2_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 UtimensRequest::nsec2() const {
  // @@protoc_insertion_point(field_get:nfsfuse.UtimensRequest.nsec2)
  return nsec2_;
}
 void UtimensRequest::set_nsec2(::google::protobuf::int64 value) {
  
  nsec2_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.UtimensRequest.nsec2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MknodRequest::kPathFieldNumber;
const int MknodRequest::kModeFieldNumber;
const int MknodRequest::kRdevFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MknodRequest::MknodRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.MknodRequest)
}

void MknodRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MknodRequest::MknodRequest(const MknodRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.MknodRequest)
}

void MknodRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0;
  rdev_ = 0u;
}

MknodRequest::~MknodRequest() {
  // @@protoc_insertion_point(destructor:nfsfuse.MknodRequest)
  SharedDtor();
}

void MknodRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MknodRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MknodRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MknodRequest_descriptor_;
}

const MknodRequest& MknodRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

MknodRequest* MknodRequest::default_instance_ = NULL;

MknodRequest* MknodRequest::New(::google::protobuf::Arena* arena) const {
  MknodRequest* n = new MknodRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MknodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.MknodRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MknodRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MknodRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mode_, rdev_);
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MknodRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.MknodRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsfuse.MknodRequest.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mode;
        break;
      }

      // optional int32 mode = 2;
      case 2: {
        if (tag == 16) {
         parse_mode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_rdev;
        break;
      }

      // optional uint32 rdev = 3;
      case 3: {
        if (tag == 24) {
         parse_rdev:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rdev_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.MknodRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.MknodRequest)
  return false;
#undef DO_
}

void MknodRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.MknodRequest)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.MknodRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional int32 mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mode(), output);
  }

  // optional uint32 rdev = 3;
  if (this->rdev() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->rdev(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.MknodRequest)
}

::google::protobuf::uint8* MknodRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.MknodRequest)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsfuse.MknodRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional int32 mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mode(), target);
  }

  // optional uint32 rdev = 3;
  if (this->rdev() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->rdev(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.MknodRequest)
  return target;
}

int MknodRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.MknodRequest)
  int total_size = 0;

  // optional string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional int32 mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  // optional uint32 rdev = 3;
  if (this->rdev() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rdev());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MknodRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.MknodRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MknodRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MknodRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.MknodRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.MknodRequest)
    MergeFrom(*source);
  }
}

void MknodRequest::MergeFrom(const MknodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.MknodRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.rdev() != 0) {
    set_rdev(from.rdev());
  }
}

void MknodRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.MknodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MknodRequest::CopyFrom(const MknodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.MknodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MknodRequest::IsInitialized() const {

  return true;
}

void MknodRequest::Swap(MknodRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MknodRequest::InternalSwap(MknodRequest* other) {
  path_.Swap(&other->path_);
  std::swap(mode_, other->mode_);
  std::swap(rdev_, other->rdev_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MknodRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MknodRequest_descriptor_;
  metadata.reflection = MknodRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MknodRequest

// optional string path = 1;
void MknodRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MknodRequest::path() const {
  // @@protoc_insertion_point(field_get:nfsfuse.MknodRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MknodRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.MknodRequest.path)
}
 void MknodRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.MknodRequest.path)
}
 void MknodRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.MknodRequest.path)
}
 ::std::string* MknodRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.MknodRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MknodRequest::release_path() {
  // @@protoc_insertion_point(field_release:nfsfuse.MknodRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MknodRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.MknodRequest.path)
}

// optional int32 mode = 2;
void MknodRequest::clear_mode() {
  mode_ = 0;
}
 ::google::protobuf::int32 MknodRequest::mode() const {
  // @@protoc_insertion_point(field_get:nfsfuse.MknodRequest.mode)
  return mode_;
}
 void MknodRequest::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.MknodRequest.mode)
}

// optional uint32 rdev = 3;
void MknodRequest::clear_rdev() {
  rdev_ = 0u;
}
 ::google::protobuf::uint32 MknodRequest::rdev() const {
  // @@protoc_insertion_point(field_get:nfsfuse.MknodRequest.rdev)
  return rdev_;
}
 void MknodRequest::set_rdev(::google::protobuf::uint32 value) {
  
  rdev_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.MknodRequest.rdev)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileDesc::kFhFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileDesc::FileDesc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.FileDesc)
}

void FileDesc::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FileDesc::FileDesc(const FileDesc& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.FileDesc)
}

void FileDesc::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  fh_ = 0;
}

FileDesc::~FileDesc() {
  // @@protoc_insertion_point(destructor:nfsfuse.FileDesc)
  SharedDtor();
}

void FileDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileDesc_descriptor_;
}

const FileDesc& FileDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

FileDesc* FileDesc::default_instance_ = NULL;

FileDesc* FileDesc::New(::google::protobuf::Arena* arena) const {
  FileDesc* n = new FileDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.FileDesc)
  fh_ = 0;
}

bool FileDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.FileDesc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fh = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.FileDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.FileDesc)
  return false;
#undef DO_
}

void FileDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.FileDesc)
  // optional int32 fh = 1;
  if (this->fh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fh(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.FileDesc)
}

::google::protobuf::uint8* FileDesc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.FileDesc)
  // optional int32 fh = 1;
  if (this->fh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fh(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.FileDesc)
  return target;
}

int FileDesc::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.FileDesc)
  int total_size = 0;

  // optional int32 fh = 1;
  if (this->fh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fh());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileDesc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.FileDesc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FileDesc* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FileDesc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.FileDesc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.FileDesc)
    MergeFrom(*source);
  }
}

void FileDesc::MergeFrom(const FileDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.FileDesc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.fh() != 0) {
    set_fh(from.fh());
  }
}

void FileDesc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.FileDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileDesc::CopyFrom(const FileDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.FileDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDesc::IsInitialized() const {

  return true;
}

void FileDesc::Swap(FileDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileDesc::InternalSwap(FileDesc* other) {
  std::swap(fh_, other->fh_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileDesc_descriptor_;
  metadata.reflection = FileDesc_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileDesc

// optional int32 fh = 1;
void FileDesc::clear_fh() {
  fh_ = 0;
}
 ::google::protobuf::int32 FileDesc::fh() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FileDesc.fh)
  return fh_;
}
 void FileDesc::set_fh(::google::protobuf::int32 value) {
  
  fh_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FileDesc.fh)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Errno::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Errno::Errno()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsfuse.Errno)
}

void Errno::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Errno::Errno(const Errno& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfsfuse.Errno)
}

void Errno::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  err_ = 0;
}

Errno::~Errno() {
  // @@protoc_insertion_point(destructor:nfsfuse.Errno)
  SharedDtor();
}

void Errno::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Errno::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Errno::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Errno_descriptor_;
}

const Errno& Errno::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfsfuse_2eproto();
  return *default_instance_;
}

Errno* Errno::default_instance_ = NULL;

Errno* Errno::New(::google::protobuf::Arena* arena) const {
  Errno* n = new Errno;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Errno::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsfuse.Errno)
  err_ = 0;
}

bool Errno::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsfuse.Errno)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsfuse.Errno)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsfuse.Errno)
  return false;
#undef DO_
}

void Errno::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsfuse.Errno)
  // optional int32 err = 1;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfsfuse.Errno)
}

::google::protobuf::uint8* Errno::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsfuse.Errno)
  // optional int32 err = 1;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfsfuse.Errno)
  return target;
}

int Errno::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfsfuse.Errno)
  int total_size = 0;

  // optional int32 err = 1;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Errno::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsfuse.Errno)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Errno* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Errno>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsfuse.Errno)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsfuse.Errno)
    MergeFrom(*source);
  }
}

void Errno::MergeFrom(const Errno& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsfuse.Errno)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void Errno::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsfuse.Errno)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Errno::CopyFrom(const Errno& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsfuse.Errno)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Errno::IsInitialized() const {

  return true;
}

void Errno::Swap(Errno* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Errno::InternalSwap(Errno* other) {
  std::swap(err_, other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Errno::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Errno_descriptor_;
  metadata.reflection = Errno_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Errno

// optional int32 err = 1;
void Errno::clear_err() {
  err_ = 0;
}
 ::google::protobuf::int32 Errno::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Errno.err)
  return err_;
}
 void Errno::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Errno.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace nfsfuse

// @@protoc_insertion_point(global_scope)
