// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nfsfuse.proto

#ifndef PROTOBUF_nfsfuse_2eproto__INCLUDED
#define PROTOBUF_nfsfuse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace nfsfuse {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_nfsfuse_2eproto();
void protobuf_AssignDesc_nfsfuse_2eproto();
void protobuf_ShutdownFile_nfsfuse_2eproto();

class CreateRequest;
class CreateResult;
class Dirent;
class FuseFileInfo;
class MkdirRequest;
class MknodRequest;
class OutputInfo;
class ReadRequest;
class ReadResult;
class RenameRequest;
class SerializeByte;
class Stat;
class String;
class UtimensRequest;
class WriteRequest;
class WriteResult;

// ===================================================================

class SerializeByte : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.SerializeByte) */ {
 public:
  SerializeByte();
  virtual ~SerializeByte();

  SerializeByte(const SerializeByte& from);

  inline SerializeByte& operator=(const SerializeByte& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializeByte& default_instance();

  void Swap(SerializeByte* other);

  // implements Message ----------------------------------------------

  inline SerializeByte* New() const { return New(NULL); }

  SerializeByte* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializeByte& from);
  void MergeFrom(const SerializeByte& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SerializeByte* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes buffer = 1;
  void clear_buffer();
  static const int kBufferFieldNumber = 1;
  const ::std::string& buffer() const;
  void set_buffer(const ::std::string& value);
  void set_buffer(const char* value);
  void set_buffer(const void* value, size_t size);
  ::std::string* mutable_buffer();
  ::std::string* release_buffer();
  void set_allocated_buffer(::std::string* buffer);

  // @@protoc_insertion_point(class_scope:nfsfuse.SerializeByte)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr buffer_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static SerializeByte* default_instance_;
};
// -------------------------------------------------------------------

class String : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.String) */ {
 public:
  String();
  virtual ~String();

  String(const String& from);

  inline String& operator=(const String& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const String& default_instance();

  void Swap(String* other);

  // implements Message ----------------------------------------------

  inline String* New() const { return New(NULL); }

  String* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const String& from);
  void MergeFrom(const String& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(String* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string str = 1;
  void clear_str();
  static const int kStrFieldNumber = 1;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // @@protoc_insertion_point(class_scope:nfsfuse.String)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static String* default_instance_;
};
// -------------------------------------------------------------------

class Dirent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.Dirent) */ {
 public:
  Dirent();
  virtual ~Dirent();

  Dirent(const Dirent& from);

  inline Dirent& operator=(const Dirent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dirent& default_instance();

  void Swap(Dirent* other);

  // implements Message ----------------------------------------------

  inline Dirent* New() const { return New(NULL); }

  Dirent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dirent& from);
  void MergeFrom(const Dirent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Dirent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dino = 1;
  void clear_dino();
  static const int kDinoFieldNumber = 1;
  ::google::protobuf::uint32 dino() const;
  void set_dino(::google::protobuf::uint32 value);

  // optional string dname = 2;
  void clear_dname();
  static const int kDnameFieldNumber = 2;
  const ::std::string& dname() const;
  void set_dname(const ::std::string& value);
  void set_dname(const char* value);
  void set_dname(const char* value, size_t size);
  ::std::string* mutable_dname();
  ::std::string* release_dname();
  void set_allocated_dname(::std::string* dname);

  // optional uint32 dtype = 3;
  void clear_dtype();
  static const int kDtypeFieldNumber = 3;
  ::google::protobuf::uint32 dtype() const;
  void set_dtype(::google::protobuf::uint32 value);

  // optional int32 err = 4;
  void clear_err();
  static const int kErrFieldNumber = 4;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsfuse.Dirent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr dname_;
  ::google::protobuf::uint32 dino_;
  ::google::protobuf::uint32 dtype_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static Dirent* default_instance_;
};
// -------------------------------------------------------------------

class Stat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.Stat) */ {
 public:
  Stat();
  virtual ~Stat();

  Stat(const Stat& from);

  inline Stat& operator=(const Stat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Stat& default_instance();

  void Swap(Stat* other);

  // implements Message ----------------------------------------------

  inline Stat* New() const { return New(NULL); }

  Stat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Stat& from);
  void MergeFrom(const Stat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Stat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dev = 1;
  void clear_dev();
  static const int kDevFieldNumber = 1;
  ::google::protobuf::uint32 dev() const;
  void set_dev(::google::protobuf::uint32 value);

  // optional uint32 ino = 2;
  void clear_ino();
  static const int kInoFieldNumber = 2;
  ::google::protobuf::uint32 ino() const;
  void set_ino(::google::protobuf::uint32 value);

  // optional int32 mode = 3;
  void clear_mode();
  static const int kModeFieldNumber = 3;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // optional uint32 nlink = 4;
  void clear_nlink();
  static const int kNlinkFieldNumber = 4;
  ::google::protobuf::uint32 nlink() const;
  void set_nlink(::google::protobuf::uint32 value);

  // optional uint32 uid = 5;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional uint32 gid = 6;
  void clear_gid();
  static const int kGidFieldNumber = 6;
  ::google::protobuf::uint32 gid() const;
  void set_gid(::google::protobuf::uint32 value);

  // optional sint64 size = 7;
  void clear_size();
  static const int kSizeFieldNumber = 7;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // optional sint64 blksize = 8;
  void clear_blksize();
  static const int kBlksizeFieldNumber = 8;
  ::google::protobuf::int64 blksize() const;
  void set_blksize(::google::protobuf::int64 value);

  // optional sint64 blocks = 9;
  void clear_blocks();
  static const int kBlocksFieldNumber = 9;
  ::google::protobuf::int64 blocks() const;
  void set_blocks(::google::protobuf::int64 value);

  // optional int32 atime = 10;
  void clear_atime();
  static const int kAtimeFieldNumber = 10;
  ::google::protobuf::int32 atime() const;
  void set_atime(::google::protobuf::int32 value);

  // optional int32 mtime = 11;
  void clear_mtime();
  static const int kMtimeFieldNumber = 11;
  ::google::protobuf::int32 mtime() const;
  void set_mtime(::google::protobuf::int32 value);

  // optional int32 ctime = 12;
  void clear_ctime();
  static const int kCtimeFieldNumber = 12;
  ::google::protobuf::int32 ctime() const;
  void set_ctime(::google::protobuf::int32 value);

  // optional int32 err = 13;
  void clear_err();
  static const int kErrFieldNumber = 13;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsfuse.Stat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 dev_;
  ::google::protobuf::uint32 ino_;
  ::google::protobuf::int32 mode_;
  ::google::protobuf::uint32 nlink_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 gid_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int64 blksize_;
  ::google::protobuf::int64 blocks_;
  ::google::protobuf::int32 atime_;
  ::google::protobuf::int32 mtime_;
  ::google::protobuf::int32 ctime_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static Stat* default_instance_;
};
// -------------------------------------------------------------------

class FuseFileInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.FuseFileInfo) */ {
 public:
  FuseFileInfo();
  virtual ~FuseFileInfo();

  FuseFileInfo(const FuseFileInfo& from);

  inline FuseFileInfo& operator=(const FuseFileInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FuseFileInfo& default_instance();

  void Swap(FuseFileInfo* other);

  // implements Message ----------------------------------------------

  inline FuseFileInfo* New() const { return New(NULL); }

  FuseFileInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FuseFileInfo& from);
  void MergeFrom(const FuseFileInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FuseFileInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flags = 1;
  void clear_flags();
  static const int kFlagsFieldNumber = 1;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // optional int32 fh = 2;
  void clear_fh();
  static const int kFhFieldNumber = 2;
  ::google::protobuf::int32 fh() const;
  void set_fh(::google::protobuf::int32 value);

  // optional uint32 oldfh = 3;
  void clear_oldfh();
  static const int kOldfhFieldNumber = 3;
  ::google::protobuf::uint32 oldfh() const;
  void set_oldfh(::google::protobuf::uint32 value);

  // optional uint64 lockowner = 5;
  void clear_lockowner();
  static const int kLockownerFieldNumber = 5;
  ::google::protobuf::uint64 lockowner() const;
  void set_lockowner(::google::protobuf::uint64 value);

  // optional uint32 pollevent = 6;
  void clear_pollevent();
  static const int kPolleventFieldNumber = 6;
  ::google::protobuf::uint32 pollevent() const;
  void set_pollevent(::google::protobuf::uint32 value);

  // optional int32 err = 4;
  void clear_err();
  static const int kErrFieldNumber = 4;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // optional string path = 7;
  void clear_path();
  static const int kPathFieldNumber = 7;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:nfsfuse.FuseFileInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 flags_;
  ::google::protobuf::int32 fh_;
  ::google::protobuf::uint64 lockowner_;
  ::google::protobuf::uint32 oldfh_;
  ::google::protobuf::uint32 pollevent_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static FuseFileInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReadResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.ReadResult) */ {
 public:
  ReadResult();
  virtual ~ReadResult();

  ReadResult(const ReadResult& from);

  inline ReadResult& operator=(const ReadResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadResult& default_instance();

  void Swap(ReadResult* other);

  // implements Message ----------------------------------------------

  inline ReadResult* New() const { return New(NULL); }

  ReadResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadResult& from);
  void MergeFrom(const ReadResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReadResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bytesread = 1;
  void clear_bytesread();
  static const int kBytesreadFieldNumber = 1;
  ::google::protobuf::int32 bytesread() const;
  void set_bytesread(::google::protobuf::int32 value);

  // optional bytes buffer = 2;
  void clear_buffer();
  static const int kBufferFieldNumber = 2;
  const ::std::string& buffer() const;
  void set_buffer(const ::std::string& value);
  void set_buffer(const char* value);
  void set_buffer(const void* value, size_t size);
  ::std::string* mutable_buffer();
  ::std::string* release_buffer();
  void set_allocated_buffer(::std::string* buffer);

  // optional int32 err = 3;
  void clear_err();
  static const int kErrFieldNumber = 3;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsfuse.ReadResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr buffer_;
  ::google::protobuf::int32 bytesread_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static ReadResult* default_instance_;
};
// -------------------------------------------------------------------

class ReadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.ReadRequest) */ {
 public:
  ReadRequest();
  virtual ~ReadRequest();

  ReadRequest(const ReadRequest& from);

  inline ReadRequest& operator=(const ReadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadRequest& default_instance();

  void Swap(ReadRequest* other);

  // implements Message ----------------------------------------------

  inline ReadRequest* New() const { return New(NULL); }

  ReadRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadRequest& from);
  void MergeFrom(const ReadRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional uint32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // optional int64 offset = 3;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:nfsfuse.ReadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int64 offset_;
  ::google::protobuf::uint32 size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static ReadRequest* default_instance_;
};
// -------------------------------------------------------------------

class WriteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.WriteRequest) */ {
 public:
  WriteRequest();
  virtual ~WriteRequest();

  WriteRequest(const WriteRequest& from);

  inline WriteRequest& operator=(const WriteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteRequest& default_instance();

  void Swap(WriteRequest* other);

  // implements Message ----------------------------------------------

  inline WriteRequest* New() const { return New(NULL); }

  WriteRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteRequest& from);
  void MergeFrom(const WriteRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional uint32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // optional int32 offset = 3;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // optional bytes buffer = 4;
  void clear_buffer();
  static const int kBufferFieldNumber = 4;
  const ::std::string& buffer() const;
  void set_buffer(const ::std::string& value);
  void set_buffer(const char* value);
  void set_buffer(const void* value, size_t size);
  ::std::string* mutable_buffer();
  ::std::string* release_buffer();
  void set_allocated_buffer(::std::string* buffer);

  // @@protoc_insertion_point(class_scope:nfsfuse.WriteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::internal::ArenaStringPtr buffer_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static WriteRequest* default_instance_;
};
// -------------------------------------------------------------------

class WriteResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.WriteResult) */ {
 public:
  WriteResult();
  virtual ~WriteResult();

  WriteResult(const WriteResult& from);

  inline WriteResult& operator=(const WriteResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteResult& default_instance();

  void Swap(WriteResult* other);

  // implements Message ----------------------------------------------

  inline WriteResult* New() const { return New(NULL); }

  WriteResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteResult& from);
  void MergeFrom(const WriteResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 nbytes = 1;
  void clear_nbytes();
  static const int kNbytesFieldNumber = 1;
  ::google::protobuf::int32 nbytes() const;
  void set_nbytes(::google::protobuf::int32 value);

  // optional int32 err = 2;
  void clear_err();
  static const int kErrFieldNumber = 2;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsfuse.WriteResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 nbytes_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static WriteResult* default_instance_;
};
// -------------------------------------------------------------------

class CreateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.CreateRequest) */ {
 public:
  CreateRequest();
  virtual ~CreateRequest();

  CreateRequest(const CreateRequest& from);

  inline CreateRequest& operator=(const CreateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRequest& default_instance();

  void Swap(CreateRequest* other);

  // implements Message ----------------------------------------------

  inline CreateRequest* New() const { return New(NULL); }

  CreateRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateRequest& from);
  void MergeFrom(const CreateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int32 mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // optional int32 flags = 3;
  void clear_flags();
  static const int kFlagsFieldNumber = 3;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsfuse.CreateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 mode_;
  ::google::protobuf::int32 flags_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static CreateRequest* default_instance_;
};
// -------------------------------------------------------------------

class CreateResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.CreateResult) */ {
 public:
  CreateResult();
  virtual ~CreateResult();

  CreateResult(const CreateResult& from);

  inline CreateResult& operator=(const CreateResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateResult& default_instance();

  void Swap(CreateResult* other);

  // implements Message ----------------------------------------------

  inline CreateResult* New() const { return New(NULL); }

  CreateResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateResult& from);
  void MergeFrom(const CreateResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flags = 1;
  void clear_flags();
  static const int kFlagsFieldNumber = 1;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // optional int32 fh = 2;
  void clear_fh();
  static const int kFhFieldNumber = 2;
  ::google::protobuf::int32 fh() const;
  void set_fh(::google::protobuf::int32 value);

  // optional uint32 oldfh = 3;
  void clear_oldfh();
  static const int kOldfhFieldNumber = 3;
  ::google::protobuf::uint32 oldfh() const;
  void set_oldfh(::google::protobuf::uint32 value);

  // optional uint64 lockowner = 5;
  void clear_lockowner();
  static const int kLockownerFieldNumber = 5;
  ::google::protobuf::uint64 lockowner() const;
  void set_lockowner(::google::protobuf::uint64 value);

  // optional uint32 pollevent = 6;
  void clear_pollevent();
  static const int kPolleventFieldNumber = 6;
  ::google::protobuf::uint32 pollevent() const;
  void set_pollevent(::google::protobuf::uint32 value);

  // optional int32 err = 7;
  void clear_err();
  static const int kErrFieldNumber = 7;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsfuse.CreateResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 flags_;
  ::google::protobuf::int32 fh_;
  ::google::protobuf::uint64 lockowner_;
  ::google::protobuf::uint32 oldfh_;
  ::google::protobuf::uint32 pollevent_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static CreateResult* default_instance_;
};
// -------------------------------------------------------------------

class MkdirRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.MkdirRequest) */ {
 public:
  MkdirRequest();
  virtual ~MkdirRequest();

  MkdirRequest(const MkdirRequest& from);

  inline MkdirRequest& operator=(const MkdirRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MkdirRequest& default_instance();

  void Swap(MkdirRequest* other);

  // implements Message ----------------------------------------------

  inline MkdirRequest* New() const { return New(NULL); }

  MkdirRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MkdirRequest& from);
  void MergeFrom(const MkdirRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MkdirRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string s = 1;
  void clear_s();
  static const int kSFieldNumber = 1;
  const ::std::string& s() const;
  void set_s(const ::std::string& value);
  void set_s(const char* value);
  void set_s(const char* value, size_t size);
  ::std::string* mutable_s();
  ::std::string* release_s();
  void set_allocated_s(::std::string* s);

  // optional int32 mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsfuse.MkdirRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr s_;
  ::google::protobuf::int32 mode_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static MkdirRequest* default_instance_;
};
// -------------------------------------------------------------------

class OutputInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.OutputInfo) */ {
 public:
  OutputInfo();
  virtual ~OutputInfo();

  OutputInfo(const OutputInfo& from);

  inline OutputInfo& operator=(const OutputInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OutputInfo& default_instance();

  void Swap(OutputInfo* other);

  // implements Message ----------------------------------------------

  inline OutputInfo* New() const { return New(NULL); }

  OutputInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OutputInfo& from);
  void MergeFrom(const OutputInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OutputInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string str = 1;
  void clear_str();
  static const int kStrFieldNumber = 1;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // optional int32 err = 2;
  void clear_err();
  static const int kErrFieldNumber = 2;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsfuse.OutputInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static OutputInfo* default_instance_;
};
// -------------------------------------------------------------------

class RenameRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.RenameRequest) */ {
 public:
  RenameRequest();
  virtual ~RenameRequest();

  RenameRequest(const RenameRequest& from);

  inline RenameRequest& operator=(const RenameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameRequest& default_instance();

  void Swap(RenameRequest* other);

  // implements Message ----------------------------------------------

  inline RenameRequest* New() const { return New(NULL); }

  RenameRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameRequest& from);
  void MergeFrom(const RenameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RenameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string fp = 1;
  void clear_fp();
  static const int kFpFieldNumber = 1;
  const ::std::string& fp() const;
  void set_fp(const ::std::string& value);
  void set_fp(const char* value);
  void set_fp(const char* value, size_t size);
  ::std::string* mutable_fp();
  ::std::string* release_fp();
  void set_allocated_fp(::std::string* fp);

  // optional string tp = 2;
  void clear_tp();
  static const int kTpFieldNumber = 2;
  const ::std::string& tp() const;
  void set_tp(const ::std::string& value);
  void set_tp(const char* value);
  void set_tp(const char* value, size_t size);
  ::std::string* mutable_tp();
  ::std::string* release_tp();
  void set_allocated_tp(::std::string* tp);

  // optional uint32 flag = 3;
  void clear_flag();
  static const int kFlagFieldNumber = 3;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:nfsfuse.RenameRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr fp_;
  ::google::protobuf::internal::ArenaStringPtr tp_;
  ::google::protobuf::uint32 flag_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static RenameRequest* default_instance_;
};
// -------------------------------------------------------------------

class UtimensRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.UtimensRequest) */ {
 public:
  UtimensRequest();
  virtual ~UtimensRequest();

  UtimensRequest(const UtimensRequest& from);

  inline UtimensRequest& operator=(const UtimensRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UtimensRequest& default_instance();

  void Swap(UtimensRequest* other);

  // implements Message ----------------------------------------------

  inline UtimensRequest* New() const { return New(NULL); }

  UtimensRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UtimensRequest& from);
  void MergeFrom(const UtimensRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UtimensRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int32 sec = 2;
  void clear_sec();
  static const int kSecFieldNumber = 2;
  ::google::protobuf::int32 sec() const;
  void set_sec(::google::protobuf::int32 value);

  // optional int64 nsec = 3;
  void clear_nsec();
  static const int kNsecFieldNumber = 3;
  ::google::protobuf::int64 nsec() const;
  void set_nsec(::google::protobuf::int64 value);

  // optional int32 sec2 = 4;
  void clear_sec2();
  static const int kSec2FieldNumber = 4;
  ::google::protobuf::int32 sec2() const;
  void set_sec2(::google::protobuf::int32 value);

  // optional int64 nsec2 = 5;
  void clear_nsec2();
  static const int kNsec2FieldNumber = 5;
  ::google::protobuf::int64 nsec2() const;
  void set_nsec2(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:nfsfuse.UtimensRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int64 nsec_;
  ::google::protobuf::int32 sec_;
  ::google::protobuf::int32 sec2_;
  ::google::protobuf::int64 nsec2_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static UtimensRequest* default_instance_;
};
// -------------------------------------------------------------------

class MknodRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsfuse.MknodRequest) */ {
 public:
  MknodRequest();
  virtual ~MknodRequest();

  MknodRequest(const MknodRequest& from);

  inline MknodRequest& operator=(const MknodRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MknodRequest& default_instance();

  void Swap(MknodRequest* other);

  // implements Message ----------------------------------------------

  inline MknodRequest* New() const { return New(NULL); }

  MknodRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MknodRequest& from);
  void MergeFrom(const MknodRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MknodRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int32 mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // optional uint32 rdev = 3;
  void clear_rdev();
  static const int kRdevFieldNumber = 3;
  ::google::protobuf::uint32 rdev() const;
  void set_rdev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:nfsfuse.MknodRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 mode_;
  ::google::protobuf::uint32 rdev_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfsfuse_2eproto();
  friend void protobuf_AssignDesc_nfsfuse_2eproto();
  friend void protobuf_ShutdownFile_nfsfuse_2eproto();

  void InitAsDefaultInstance();
  static MknodRequest* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SerializeByte

// optional bytes buffer = 1;
inline void SerializeByte::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SerializeByte::buffer() const {
  // @@protoc_insertion_point(field_get:nfsfuse.SerializeByte.buffer)
  return buffer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SerializeByte::set_buffer(const ::std::string& value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.SerializeByte.buffer)
}
inline void SerializeByte::set_buffer(const char* value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.SerializeByte.buffer)
}
inline void SerializeByte::set_buffer(const void* value, size_t size) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.SerializeByte.buffer)
}
inline ::std::string* SerializeByte::mutable_buffer() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.SerializeByte.buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SerializeByte::release_buffer() {
  // @@protoc_insertion_point(field_release:nfsfuse.SerializeByte.buffer)
  
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SerializeByte::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    
  } else {
    
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.SerializeByte.buffer)
}

// -------------------------------------------------------------------

// String

// optional string str = 1;
inline void String::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& String::str() const {
  // @@protoc_insertion_point(field_get:nfsfuse.String.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void String::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.String.str)
}
inline void String::set_str(const char* value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.String.str)
}
inline void String::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.String.str)
}
inline ::std::string* String::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.String.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* String::release_str() {
  // @@protoc_insertion_point(field_release:nfsfuse.String.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void String::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.String.str)
}

// -------------------------------------------------------------------

// Dirent

// optional uint32 dino = 1;
inline void Dirent::clear_dino() {
  dino_ = 0u;
}
inline ::google::protobuf::uint32 Dirent::dino() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Dirent.dino)
  return dino_;
}
inline void Dirent::set_dino(::google::protobuf::uint32 value) {
  
  dino_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Dirent.dino)
}

// optional string dname = 2;
inline void Dirent::clear_dname() {
  dname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Dirent::dname() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Dirent.dname)
  return dname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Dirent::set_dname(const ::std::string& value) {
  
  dname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.Dirent.dname)
}
inline void Dirent::set_dname(const char* value) {
  
  dname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.Dirent.dname)
}
inline void Dirent::set_dname(const char* value, size_t size) {
  
  dname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.Dirent.dname)
}
inline ::std::string* Dirent::mutable_dname() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.Dirent.dname)
  return dname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Dirent::release_dname() {
  // @@protoc_insertion_point(field_release:nfsfuse.Dirent.dname)
  
  return dname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Dirent::set_allocated_dname(::std::string* dname) {
  if (dname != NULL) {
    
  } else {
    
  }
  dname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dname);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.Dirent.dname)
}

// optional uint32 dtype = 3;
inline void Dirent::clear_dtype() {
  dtype_ = 0u;
}
inline ::google::protobuf::uint32 Dirent::dtype() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Dirent.dtype)
  return dtype_;
}
inline void Dirent::set_dtype(::google::protobuf::uint32 value) {
  
  dtype_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Dirent.dtype)
}

// optional int32 err = 4;
inline void Dirent::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 Dirent::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Dirent.err)
  return err_;
}
inline void Dirent::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Dirent.err)
}

// -------------------------------------------------------------------

// Stat

// optional uint32 dev = 1;
inline void Stat::clear_dev() {
  dev_ = 0u;
}
inline ::google::protobuf::uint32 Stat::dev() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.dev)
  return dev_;
}
inline void Stat::set_dev(::google::protobuf::uint32 value) {
  
  dev_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.dev)
}

// optional uint32 ino = 2;
inline void Stat::clear_ino() {
  ino_ = 0u;
}
inline ::google::protobuf::uint32 Stat::ino() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.ino)
  return ino_;
}
inline void Stat::set_ino(::google::protobuf::uint32 value) {
  
  ino_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.ino)
}

// optional int32 mode = 3;
inline void Stat::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 Stat::mode() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.mode)
  return mode_;
}
inline void Stat::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.mode)
}

// optional uint32 nlink = 4;
inline void Stat::clear_nlink() {
  nlink_ = 0u;
}
inline ::google::protobuf::uint32 Stat::nlink() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.nlink)
  return nlink_;
}
inline void Stat::set_nlink(::google::protobuf::uint32 value) {
  
  nlink_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.nlink)
}

// optional uint32 uid = 5;
inline void Stat::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 Stat::uid() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.uid)
  return uid_;
}
inline void Stat::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.uid)
}

// optional uint32 gid = 6;
inline void Stat::clear_gid() {
  gid_ = 0u;
}
inline ::google::protobuf::uint32 Stat::gid() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.gid)
  return gid_;
}
inline void Stat::set_gid(::google::protobuf::uint32 value) {
  
  gid_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.gid)
}

// optional sint64 size = 7;
inline void Stat::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::size() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.size)
  return size_;
}
inline void Stat::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.size)
}

// optional sint64 blksize = 8;
inline void Stat::clear_blksize() {
  blksize_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::blksize() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.blksize)
  return blksize_;
}
inline void Stat::set_blksize(::google::protobuf::int64 value) {
  
  blksize_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.blksize)
}

// optional sint64 blocks = 9;
inline void Stat::clear_blocks() {
  blocks_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::blocks() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.blocks)
  return blocks_;
}
inline void Stat::set_blocks(::google::protobuf::int64 value) {
  
  blocks_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.blocks)
}

// optional int32 atime = 10;
inline void Stat::clear_atime() {
  atime_ = 0;
}
inline ::google::protobuf::int32 Stat::atime() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.atime)
  return atime_;
}
inline void Stat::set_atime(::google::protobuf::int32 value) {
  
  atime_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.atime)
}

// optional int32 mtime = 11;
inline void Stat::clear_mtime() {
  mtime_ = 0;
}
inline ::google::protobuf::int32 Stat::mtime() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.mtime)
  return mtime_;
}
inline void Stat::set_mtime(::google::protobuf::int32 value) {
  
  mtime_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.mtime)
}

// optional int32 ctime = 12;
inline void Stat::clear_ctime() {
  ctime_ = 0;
}
inline ::google::protobuf::int32 Stat::ctime() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.ctime)
  return ctime_;
}
inline void Stat::set_ctime(::google::protobuf::int32 value) {
  
  ctime_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.ctime)
}

// optional int32 err = 13;
inline void Stat::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 Stat::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.Stat.err)
  return err_;
}
inline void Stat::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.Stat.err)
}

// -------------------------------------------------------------------

// FuseFileInfo

// optional int32 flags = 1;
inline void FuseFileInfo::clear_flags() {
  flags_ = 0;
}
inline ::google::protobuf::int32 FuseFileInfo::flags() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.flags)
  return flags_;
}
inline void FuseFileInfo::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.flags)
}

// optional int32 fh = 2;
inline void FuseFileInfo::clear_fh() {
  fh_ = 0;
}
inline ::google::protobuf::int32 FuseFileInfo::fh() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.fh)
  return fh_;
}
inline void FuseFileInfo::set_fh(::google::protobuf::int32 value) {
  
  fh_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.fh)
}

// optional uint32 oldfh = 3;
inline void FuseFileInfo::clear_oldfh() {
  oldfh_ = 0u;
}
inline ::google::protobuf::uint32 FuseFileInfo::oldfh() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.oldfh)
  return oldfh_;
}
inline void FuseFileInfo::set_oldfh(::google::protobuf::uint32 value) {
  
  oldfh_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.oldfh)
}

// optional uint64 lockowner = 5;
inline void FuseFileInfo::clear_lockowner() {
  lockowner_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FuseFileInfo::lockowner() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.lockowner)
  return lockowner_;
}
inline void FuseFileInfo::set_lockowner(::google::protobuf::uint64 value) {
  
  lockowner_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.lockowner)
}

// optional uint32 pollevent = 6;
inline void FuseFileInfo::clear_pollevent() {
  pollevent_ = 0u;
}
inline ::google::protobuf::uint32 FuseFileInfo::pollevent() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.pollevent)
  return pollevent_;
}
inline void FuseFileInfo::set_pollevent(::google::protobuf::uint32 value) {
  
  pollevent_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.pollevent)
}

// optional int32 err = 4;
inline void FuseFileInfo::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 FuseFileInfo::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.err)
  return err_;
}
inline void FuseFileInfo::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.err)
}

// optional string path = 7;
inline void FuseFileInfo::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FuseFileInfo::path() const {
  // @@protoc_insertion_point(field_get:nfsfuse.FuseFileInfo.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FuseFileInfo::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.FuseFileInfo.path)
}
inline void FuseFileInfo::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.FuseFileInfo.path)
}
inline void FuseFileInfo::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.FuseFileInfo.path)
}
inline ::std::string* FuseFileInfo::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.FuseFileInfo.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FuseFileInfo::release_path() {
  // @@protoc_insertion_point(field_release:nfsfuse.FuseFileInfo.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FuseFileInfo::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.FuseFileInfo.path)
}

// -------------------------------------------------------------------

// ReadResult

// optional int32 bytesread = 1;
inline void ReadResult::clear_bytesread() {
  bytesread_ = 0;
}
inline ::google::protobuf::int32 ReadResult::bytesread() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadResult.bytesread)
  return bytesread_;
}
inline void ReadResult::set_bytesread(::google::protobuf::int32 value) {
  
  bytesread_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.ReadResult.bytesread)
}

// optional bytes buffer = 2;
inline void ReadResult::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadResult::buffer() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadResult.buffer)
  return buffer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadResult::set_buffer(const ::std::string& value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.ReadResult.buffer)
}
inline void ReadResult::set_buffer(const char* value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.ReadResult.buffer)
}
inline void ReadResult::set_buffer(const void* value, size_t size) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.ReadResult.buffer)
}
inline ::std::string* ReadResult::mutable_buffer() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.ReadResult.buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadResult::release_buffer() {
  // @@protoc_insertion_point(field_release:nfsfuse.ReadResult.buffer)
  
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadResult::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    
  } else {
    
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.ReadResult.buffer)
}

// optional int32 err = 3;
inline void ReadResult::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 ReadResult::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadResult.err)
  return err_;
}
inline void ReadResult::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.ReadResult.err)
}

// -------------------------------------------------------------------

// ReadRequest

// optional string path = 1;
inline void ReadRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadRequest::path() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.ReadRequest.path)
}
inline void ReadRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.ReadRequest.path)
}
inline void ReadRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.ReadRequest.path)
}
inline ::std::string* ReadRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.ReadRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadRequest::release_path() {
  // @@protoc_insertion_point(field_release:nfsfuse.ReadRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.ReadRequest.path)
}

// optional uint32 size = 2;
inline void ReadRequest::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 ReadRequest::size() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadRequest.size)
  return size_;
}
inline void ReadRequest::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.ReadRequest.size)
}

// optional int64 offset = 3;
inline void ReadRequest::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ReadRequest::offset() const {
  // @@protoc_insertion_point(field_get:nfsfuse.ReadRequest.offset)
  return offset_;
}
inline void ReadRequest::set_offset(::google::protobuf::int64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.ReadRequest.offset)
}

// -------------------------------------------------------------------

// WriteRequest

// optional string path = 1;
inline void WriteRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteRequest::path() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.WriteRequest.path)
}
inline void WriteRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.WriteRequest.path)
}
inline void WriteRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.WriteRequest.path)
}
inline ::std::string* WriteRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.WriteRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteRequest::release_path() {
  // @@protoc_insertion_point(field_release:nfsfuse.WriteRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.WriteRequest.path)
}

// optional uint32 size = 2;
inline void WriteRequest::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 WriteRequest::size() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteRequest.size)
  return size_;
}
inline void WriteRequest::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.WriteRequest.size)
}

// optional int32 offset = 3;
inline void WriteRequest::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 WriteRequest::offset() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteRequest.offset)
  return offset_;
}
inline void WriteRequest::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.WriteRequest.offset)
}

// optional bytes buffer = 4;
inline void WriteRequest::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteRequest::buffer() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteRequest.buffer)
  return buffer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequest::set_buffer(const ::std::string& value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.WriteRequest.buffer)
}
inline void WriteRequest::set_buffer(const char* value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.WriteRequest.buffer)
}
inline void WriteRequest::set_buffer(const void* value, size_t size) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.WriteRequest.buffer)
}
inline ::std::string* WriteRequest::mutable_buffer() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.WriteRequest.buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteRequest::release_buffer() {
  // @@protoc_insertion_point(field_release:nfsfuse.WriteRequest.buffer)
  
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequest::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    
  } else {
    
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.WriteRequest.buffer)
}

// -------------------------------------------------------------------

// WriteResult

// optional int32 nbytes = 1;
inline void WriteResult::clear_nbytes() {
  nbytes_ = 0;
}
inline ::google::protobuf::int32 WriteResult::nbytes() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteResult.nbytes)
  return nbytes_;
}
inline void WriteResult::set_nbytes(::google::protobuf::int32 value) {
  
  nbytes_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.WriteResult.nbytes)
}

// optional int32 err = 2;
inline void WriteResult::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 WriteResult::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.WriteResult.err)
  return err_;
}
inline void WriteResult::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.WriteResult.err)
}

// -------------------------------------------------------------------

// CreateRequest

// optional string path = 1;
inline void CreateRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateRequest::path() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.CreateRequest.path)
}
inline void CreateRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.CreateRequest.path)
}
inline void CreateRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.CreateRequest.path)
}
inline ::std::string* CreateRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.CreateRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateRequest::release_path() {
  // @@protoc_insertion_point(field_release:nfsfuse.CreateRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.CreateRequest.path)
}

// optional int32 mode = 2;
inline void CreateRequest::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 CreateRequest::mode() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateRequest.mode)
  return mode_;
}
inline void CreateRequest::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateRequest.mode)
}

// optional int32 flags = 3;
inline void CreateRequest::clear_flags() {
  flags_ = 0;
}
inline ::google::protobuf::int32 CreateRequest::flags() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateRequest.flags)
  return flags_;
}
inline void CreateRequest::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateRequest.flags)
}

// -------------------------------------------------------------------

// CreateResult

// optional int32 flags = 1;
inline void CreateResult::clear_flags() {
  flags_ = 0;
}
inline ::google::protobuf::int32 CreateResult::flags() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateResult.flags)
  return flags_;
}
inline void CreateResult::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateResult.flags)
}

// optional int32 fh = 2;
inline void CreateResult::clear_fh() {
  fh_ = 0;
}
inline ::google::protobuf::int32 CreateResult::fh() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateResult.fh)
  return fh_;
}
inline void CreateResult::set_fh(::google::protobuf::int32 value) {
  
  fh_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateResult.fh)
}

// optional uint32 oldfh = 3;
inline void CreateResult::clear_oldfh() {
  oldfh_ = 0u;
}
inline ::google::protobuf::uint32 CreateResult::oldfh() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateResult.oldfh)
  return oldfh_;
}
inline void CreateResult::set_oldfh(::google::protobuf::uint32 value) {
  
  oldfh_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateResult.oldfh)
}

// optional uint64 lockowner = 5;
inline void CreateResult::clear_lockowner() {
  lockowner_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CreateResult::lockowner() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateResult.lockowner)
  return lockowner_;
}
inline void CreateResult::set_lockowner(::google::protobuf::uint64 value) {
  
  lockowner_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateResult.lockowner)
}

// optional uint32 pollevent = 6;
inline void CreateResult::clear_pollevent() {
  pollevent_ = 0u;
}
inline ::google::protobuf::uint32 CreateResult::pollevent() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateResult.pollevent)
  return pollevent_;
}
inline void CreateResult::set_pollevent(::google::protobuf::uint32 value) {
  
  pollevent_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateResult.pollevent)
}

// optional int32 err = 7;
inline void CreateResult::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 CreateResult::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.CreateResult.err)
  return err_;
}
inline void CreateResult::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.CreateResult.err)
}

// -------------------------------------------------------------------

// MkdirRequest

// optional string s = 1;
inline void MkdirRequest::clear_s() {
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MkdirRequest::s() const {
  // @@protoc_insertion_point(field_get:nfsfuse.MkdirRequest.s)
  return s_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MkdirRequest::set_s(const ::std::string& value) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.MkdirRequest.s)
}
inline void MkdirRequest::set_s(const char* value) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.MkdirRequest.s)
}
inline void MkdirRequest::set_s(const char* value, size_t size) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.MkdirRequest.s)
}
inline ::std::string* MkdirRequest::mutable_s() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.MkdirRequest.s)
  return s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MkdirRequest::release_s() {
  // @@protoc_insertion_point(field_release:nfsfuse.MkdirRequest.s)
  
  return s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MkdirRequest::set_allocated_s(::std::string* s) {
  if (s != NULL) {
    
  } else {
    
  }
  s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.MkdirRequest.s)
}

// optional int32 mode = 2;
inline void MkdirRequest::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 MkdirRequest::mode() const {
  // @@protoc_insertion_point(field_get:nfsfuse.MkdirRequest.mode)
  return mode_;
}
inline void MkdirRequest::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.MkdirRequest.mode)
}

// -------------------------------------------------------------------

// OutputInfo

// optional string str = 1;
inline void OutputInfo::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OutputInfo::str() const {
  // @@protoc_insertion_point(field_get:nfsfuse.OutputInfo.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OutputInfo::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.OutputInfo.str)
}
inline void OutputInfo::set_str(const char* value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.OutputInfo.str)
}
inline void OutputInfo::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.OutputInfo.str)
}
inline ::std::string* OutputInfo::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.OutputInfo.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OutputInfo::release_str() {
  // @@protoc_insertion_point(field_release:nfsfuse.OutputInfo.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OutputInfo::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.OutputInfo.str)
}

// optional int32 err = 2;
inline void OutputInfo::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 OutputInfo::err() const {
  // @@protoc_insertion_point(field_get:nfsfuse.OutputInfo.err)
  return err_;
}
inline void OutputInfo::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.OutputInfo.err)
}

// -------------------------------------------------------------------

// RenameRequest

// optional string fp = 1;
inline void RenameRequest::clear_fp() {
  fp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameRequest::fp() const {
  // @@protoc_insertion_point(field_get:nfsfuse.RenameRequest.fp)
  return fp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_fp(const ::std::string& value) {
  
  fp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.RenameRequest.fp)
}
inline void RenameRequest::set_fp(const char* value) {
  
  fp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.RenameRequest.fp)
}
inline void RenameRequest::set_fp(const char* value, size_t size) {
  
  fp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.RenameRequest.fp)
}
inline ::std::string* RenameRequest::mutable_fp() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.RenameRequest.fp)
  return fp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameRequest::release_fp() {
  // @@protoc_insertion_point(field_release:nfsfuse.RenameRequest.fp)
  
  return fp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_allocated_fp(::std::string* fp) {
  if (fp != NULL) {
    
  } else {
    
  }
  fp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fp);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.RenameRequest.fp)
}

// optional string tp = 2;
inline void RenameRequest::clear_tp() {
  tp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameRequest::tp() const {
  // @@protoc_insertion_point(field_get:nfsfuse.RenameRequest.tp)
  return tp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_tp(const ::std::string& value) {
  
  tp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.RenameRequest.tp)
}
inline void RenameRequest::set_tp(const char* value) {
  
  tp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.RenameRequest.tp)
}
inline void RenameRequest::set_tp(const char* value, size_t size) {
  
  tp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.RenameRequest.tp)
}
inline ::std::string* RenameRequest::mutable_tp() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.RenameRequest.tp)
  return tp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameRequest::release_tp() {
  // @@protoc_insertion_point(field_release:nfsfuse.RenameRequest.tp)
  
  return tp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_allocated_tp(::std::string* tp) {
  if (tp != NULL) {
    
  } else {
    
  }
  tp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tp);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.RenameRequest.tp)
}

// optional uint32 flag = 3;
inline void RenameRequest::clear_flag() {
  flag_ = 0u;
}
inline ::google::protobuf::uint32 RenameRequest::flag() const {
  // @@protoc_insertion_point(field_get:nfsfuse.RenameRequest.flag)
  return flag_;
}
inline void RenameRequest::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.RenameRequest.flag)
}

// -------------------------------------------------------------------

// UtimensRequest

// optional string path = 1;
inline void UtimensRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UtimensRequest::path() const {
  // @@protoc_insertion_point(field_get:nfsfuse.UtimensRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UtimensRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.UtimensRequest.path)
}
inline void UtimensRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.UtimensRequest.path)
}
inline void UtimensRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.UtimensRequest.path)
}
inline ::std::string* UtimensRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.UtimensRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UtimensRequest::release_path() {
  // @@protoc_insertion_point(field_release:nfsfuse.UtimensRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UtimensRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.UtimensRequest.path)
}

// optional int32 sec = 2;
inline void UtimensRequest::clear_sec() {
  sec_ = 0;
}
inline ::google::protobuf::int32 UtimensRequest::sec() const {
  // @@protoc_insertion_point(field_get:nfsfuse.UtimensRequest.sec)
  return sec_;
}
inline void UtimensRequest::set_sec(::google::protobuf::int32 value) {
  
  sec_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.UtimensRequest.sec)
}

// optional int64 nsec = 3;
inline void UtimensRequest::clear_nsec() {
  nsec_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UtimensRequest::nsec() const {
  // @@protoc_insertion_point(field_get:nfsfuse.UtimensRequest.nsec)
  return nsec_;
}
inline void UtimensRequest::set_nsec(::google::protobuf::int64 value) {
  
  nsec_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.UtimensRequest.nsec)
}

// optional int32 sec2 = 4;
inline void UtimensRequest::clear_sec2() {
  sec2_ = 0;
}
inline ::google::protobuf::int32 UtimensRequest::sec2() const {
  // @@protoc_insertion_point(field_get:nfsfuse.UtimensRequest.sec2)
  return sec2_;
}
inline void UtimensRequest::set_sec2(::google::protobuf::int32 value) {
  
  sec2_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.UtimensRequest.sec2)
}

// optional int64 nsec2 = 5;
inline void UtimensRequest::clear_nsec2() {
  nsec2_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UtimensRequest::nsec2() const {
  // @@protoc_insertion_point(field_get:nfsfuse.UtimensRequest.nsec2)
  return nsec2_;
}
inline void UtimensRequest::set_nsec2(::google::protobuf::int64 value) {
  
  nsec2_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.UtimensRequest.nsec2)
}

// -------------------------------------------------------------------

// MknodRequest

// optional string path = 1;
inline void MknodRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MknodRequest::path() const {
  // @@protoc_insertion_point(field_get:nfsfuse.MknodRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MknodRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsfuse.MknodRequest.path)
}
inline void MknodRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsfuse.MknodRequest.path)
}
inline void MknodRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsfuse.MknodRequest.path)
}
inline ::std::string* MknodRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsfuse.MknodRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MknodRequest::release_path() {
  // @@protoc_insertion_point(field_release:nfsfuse.MknodRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MknodRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsfuse.MknodRequest.path)
}

// optional int32 mode = 2;
inline void MknodRequest::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 MknodRequest::mode() const {
  // @@protoc_insertion_point(field_get:nfsfuse.MknodRequest.mode)
  return mode_;
}
inline void MknodRequest::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.MknodRequest.mode)
}

// optional uint32 rdev = 3;
inline void MknodRequest::clear_rdev() {
  rdev_ = 0u;
}
inline ::google::protobuf::uint32 MknodRequest::rdev() const {
  // @@protoc_insertion_point(field_get:nfsfuse.MknodRequest.rdev)
  return rdev_;
}
inline void MknodRequest::set_rdev(::google::protobuf::uint32 value) {
  
  rdev_ = value;
  // @@protoc_insertion_point(field_set:nfsfuse.MknodRequest.rdev)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace nfsfuse

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_nfsfuse_2eproto__INCLUDED
